State 28 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 211 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: DECL
    2        | DECL PROGRAM

    3 DECL: VAR_DECL
    4     | FUNCTION_DECL
    5     | CLASS_DECL
    6     | INTERFACE_DECL

    7 VAR_DECL: VARIABLE opt_semicolon
    8         | ERR

    9 VARIABLE: TYPE identifier

   10 VARIABLE_PLUS: VARIABLE opt_coma VARIABLE_PLUS
   11              | VARIABLE

   12 TYPE: vip_int
   13     | vip_double
   14     | vip_bool
   15     | vip_string
   16     | TYPE opt_left_bracket opt_right_bracket

   17 FUNCTION_DECL: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK
   18              | vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK

   19 FORMALS: VARIABLE_PLUS
   20        | %empty

   21 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

   22 EXTENDS: vip_extends identifier
   23        | %empty
   24        | ERR

   25 IMPLEMENTS: vip_implements IDENTIFIER_PLUS
   26           | %empty
   27           | ERR

   28 IDENTIFIER_PLUS: identifier opt_coma IDENTIFIER_PLUS
   29                | identifier
   30                | ERR

   31 FIELD_ASTERISK: FIELD FIELD_ASTERISK
   32               | %empty

   33 FIELD: VAR_DECL
   34      | FUNCTION_DECL

   35 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

   36 PROTOTYPE_ASTERISK: PROTOTYPE PROTOTYPE_ASTERISK
   37                   | %empty
   38                   | ERR

   39 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon
   40          | vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

   41 STMT_BLOCK: opt_left_brace VARS STMTS opt_right_brace

   42 VARS: VAR_DECL VARS
   43     | %empty

   44 STMTS: STATEMENT STMTS
   45      | %empty

   46 STATEMENT: EXPRESSION_Q opt_semicolon
   47          | IF_STMT
   48          | WHILE_STMT
   49          | FOR_STMT
   50          | BREAK_STMT
   51          | RETURN_STMT
   52          | PRINT_STMT
   53          | STMT_BLOCK
   54          | ERR

   55 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

   56 ELSE_STMT: vip_else STATEMENT
   57          | %empty

   58 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

   60 RETURN_STMT: vip_return EXPRESSION_Q opt_semicolon

   61 BREAK_STMT: vip_break opt_semicolon

   62 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon

   63 EXPRESSION_Q: EXPRESSION
   64             | %empty

   65 EXPRESSION_PLUS: EXPRESSION opt_coma EXPRESSION_PLUS
   66                | EXPRESSION

   67 EXPRESSION: VALUE opt_assign EXPRESSION
   68           | CONST
   69           | VALUE
   70           | vip_this
   71           | CALL
   72           | opt_left_parentheses EXPRESSION opt_right_parentheses
   73           | EXPRESSION opt_plus EXPRESSION
   74           | EXPRESSION opt_minus EXPRESSION
   75           | EXPRESSION opt_divide EXPRESSION
   76           | EXPRESSION opt_times EXPRESSION
   77           | EXPRESSION opt_mod EXPRESSION
   78           | opt_minus EXPRESSION
   79           | EXPRESSION opt_lower EXPRESSION
   80           | EXPRESSION opt_lower_equal EXPRESSION
   81           | EXPRESSION opt_greater EXPRESSION
   82           | EXPRESSION opt_greater_equal EXPRESSION
   83           | EXPRESSION opt_equal EXPRESSION
   84           | EXPRESSION opt_not_equal EXPRESSION
   85           | EXPRESSION opt_and EXPRESSION
   86           | EXPRESSION opt_or EXPRESSION
   87           | opt_not EXPRESSION
   88           | vip_New opt_left_parentheses identifier opt_right_parentheses
   89           | vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses
   90           | vip_ReadInteger opt_left_parentheses opt_right_parentheses
   91           | vip_ReadLine opt_left_parentheses opt_right_parentheses
   92           | vip_Malloc opt_left_parentheses EXPRESSION opt_right_parentheses

   93 VALUE: identifier
   94      | EXPRESSION VALUE_P

   95 VALUE_P: opt_dot identifier
   96        | opt_left_bracket EXPRESSION opt_right_bracket

   97 CALL: identifier opt_left_parentheses ACTUAL opt_right_parentheses
   98     | EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

  100 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION opt_right_parentheses
  101         | vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses

  102 ACTUAL: EXPRESSION_PLUS
  103       | %empty

  104 CONST: num_int
  105      | num_hex
  106      | num_double
  107      | val_bool
  108      | val_string
  109      | vip_null

  110 ERR: error opt_left_brace
  111    | error opt_right_brace
  112    | error opt_left_bracket
  113    | error opt_right_bracket
  114    | error opt_left_parentheses
  115    | error opt_right_parentheses
  116    | error opt_semicolon
  117    | error VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256) 110 111 112 113 114 115 116 117
vip_void (258) 18 40
vip_int (259) 12
vip_double (260) 13
vip_bool (261) 14
vip_string (262) 15
vip_class (263) 21
vip_interface (264) 35
vip_null (265) 109
vip_this (266) 70
vip_extends (267) 22
vip_implements (268) 25
vip_for (269) 59
vip_while (270) 58
vip_if (271) 55
vip_else (272) 56
vip_return (273) 60
vip_break (274) 61
vip_New (275) 88
vip_NewArray (276) 89
vip_Print (277) 62
vip_ReadInteger (278) 90
vip_ReadLine (279) 91
vip_Malloc (280) 92
vip_GetByte (281) 100
vip_SetByte (282) 101
identifier (283) 9 17 18 21 22 28 29 35 39 40 88 93 95 97 98
num_int (284) 104
num_hex (285) 105
num_double (286) 106
val_string (287) 108
val_bool (288) 107
opt_plus (289) 73
opt_minus (290) 74 78
opt_times (291) 76
opt_divide (292) 75
opt_mod (293) 77
opt_lower (294) 79
opt_lower_equal (295) 80
opt_greater (296) 81
opt_greater_equal (297) 82
opt_assign (298) 67
opt_equal (299) 83
opt_not_equal (300) 84
opt_and (301) 85
opt_or (302) 86
opt_not (303) 87
opt_semicolon (304) 7 39 40 46 59 60 61 62 116
opt_dot (305) 95 98 99
opt_coma (306) 10 28 65 89 101
opt_left_bracket (307) 16 96 112
opt_right_bracket (308) 16 96 113
opt_left_brace (309) 21 35 41 110
opt_right_brace (310) 21 35 41 111
opt_left_parentheses (311) 17 18 39 40 55 58 59 62 72 88 89 90 91 92
    97 98 99 100 101 114
opt_right_parentheses (312) 17 18 39 40 55 58 59 62 72 88 89 90 91
    92 97 98 99 100 101 115


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
PROGRAM (59)
    on left: 1 2, on right: 0 2
DECL (60)
    on left: 3 4 5 6, on right: 1 2
VAR_DECL (61)
    on left: 7 8, on right: 3 33 42
VARIABLE (62)
    on left: 9, on right: 7 10 11 117
VARIABLE_PLUS (63)
    on left: 10 11, on right: 10 19
TYPE (64)
    on left: 12 13 14 15 16, on right: 9 16 17 39 89
FUNCTION_DECL (65)
    on left: 17 18, on right: 4 34
FORMALS (66)
    on left: 19 20, on right: 17 18 39 40
CLASS_DECL (67)
    on left: 21, on right: 5
EXTENDS (68)
    on left: 22 23 24, on right: 21
IMPLEMENTS (69)
    on left: 25 26 27, on right: 21
IDENTIFIER_PLUS (70)
    on left: 28 29 30, on right: 25 28
FIELD_ASTERISK (71)
    on left: 31 32, on right: 21 31
FIELD (72)
    on left: 33 34, on right: 31
INTERFACE_DECL (73)
    on left: 35, on right: 6
PROTOTYPE_ASTERISK (74)
    on left: 36 37 38, on right: 35 36
PROTOTYPE (75)
    on left: 39 40, on right: 36
STMT_BLOCK (76)
    on left: 41, on right: 17 18 53
VARS (77)
    on left: 42 43, on right: 41 42
STMTS (78)
    on left: 44 45, on right: 41 44
STATEMENT (79)
    on left: 46 47 48 49 50 51 52 53 54, on right: 44 55 56 58 59
IF_STMT (80)
    on left: 55, on right: 47
ELSE_STMT (81)
    on left: 56 57, on right: 55
WHILE_STMT (82)
    on left: 58, on right: 48
FOR_STMT (83)
    on left: 59, on right: 49
RETURN_STMT (84)
    on left: 60, on right: 51
BREAK_STMT (85)
    on left: 61, on right: 50
PRINT_STMT (86)
    on left: 62, on right: 52
EXPRESSION_Q (87)
    on left: 63 64, on right: 46 59 60
EXPRESSION_PLUS (88)
    on left: 65 66, on right: 62 65 102
EXPRESSION (89)
    on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
    85 86 87 88 89 90 91 92, on right: 55 58 59 63 65 66 67 72 73 74
    75 76 77 78 79 80 81 82 83 84 85 86 87 89 92 94 96 98 99 100 101
VALUE (90)
    on left: 93 94, on right: 67 69
VALUE_P (91)
    on left: 95 96, on right: 94
CALL (92)
    on left: 97 98 99, on right: 71
LIB_CALL (93)
    on left: 100 101, on right: 99
ACTUAL (94)
    on left: 102 103, on right: 97 98 99
CONST (95)
    on left: 104 105 106 107 108 109, on right: 68
ERR (96)
    on left: 110 111 112 113 114 115 116 117, on right: 8 24 27 30
    38 54


State 0

    0 $accept: . PROGRAM $end

    error          shift, and go to state 1
    vip_void       shift, and go to state 2
    vip_int        shift, and go to state 3
    vip_double     shift, and go to state 4
    vip_bool       shift, and go to state 5
    vip_string     shift, and go to state 6
    vip_class      shift, and go to state 7
    vip_interface  shift, and go to state 8

    PROGRAM         go to state 9
    DECL            go to state 10
    VAR_DECL        go to state 11
    VARIABLE        go to state 12
    TYPE            go to state 13
    FUNCTION_DECL   go to state 14
    CLASS_DECL      go to state 15
    INTERFACE_DECL  go to state 16
    ERR             go to state 17


State 1

  110 ERR: error . opt_left_brace
  111    | error . opt_right_brace
  112    | error . opt_left_bracket
  113    | error . opt_right_bracket
  114    | error . opt_left_parentheses
  115    | error . opt_right_parentheses
  116    | error . opt_semicolon
  117    | error . VARIABLE

    vip_int                shift, and go to state 3
    vip_double             shift, and go to state 4
    vip_bool               shift, and go to state 5
    vip_string             shift, and go to state 6
    opt_semicolon          shift, and go to state 18
    opt_left_bracket       shift, and go to state 19
    opt_right_bracket      shift, and go to state 20
    opt_left_brace         shift, and go to state 21
    opt_right_brace        shift, and go to state 22
    opt_left_parentheses   shift, and go to state 23
    opt_right_parentheses  shift, and go to state 24

    VARIABLE  go to state 25
    TYPE      go to state 26


State 2

   18 FUNCTION_DECL: vip_void . identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK

    identifier  shift, and go to state 27


State 3

   12 TYPE: vip_int .

    $default  reduce using rule 12 (TYPE)


State 4

   13 TYPE: vip_double .

    $default  reduce using rule 13 (TYPE)


State 5

   14 TYPE: vip_bool .

    $default  reduce using rule 14 (TYPE)


State 6

   15 TYPE: vip_string .

    $default  reduce using rule 15 (TYPE)


State 7

   21 CLASS_DECL: vip_class . identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    identifier  shift, and go to state 28


State 8

   35 INTERFACE_DECL: vip_interface . identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

    identifier  shift, and go to state 29


State 9

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 30


State 10

    1 PROGRAM: DECL .
    2        | DECL . PROGRAM

    error          shift, and go to state 1
    vip_void       shift, and go to state 2
    vip_int        shift, and go to state 3
    vip_double     shift, and go to state 4
    vip_bool       shift, and go to state 5
    vip_string     shift, and go to state 6
    vip_class      shift, and go to state 7
    vip_interface  shift, and go to state 8

    $end  reduce using rule 1 (PROGRAM)

    PROGRAM         go to state 31
    DECL            go to state 10
    VAR_DECL        go to state 11
    VARIABLE        go to state 12
    TYPE            go to state 13
    FUNCTION_DECL   go to state 14
    CLASS_DECL      go to state 15
    INTERFACE_DECL  go to state 16
    ERR             go to state 17


State 11

    3 DECL: VAR_DECL .

    $default  reduce using rule 3 (DECL)


State 12

    7 VAR_DECL: VARIABLE . opt_semicolon

    opt_semicolon  shift, and go to state 32


State 13

    9 VARIABLE: TYPE . identifier
   16 TYPE: TYPE . opt_left_bracket opt_right_bracket
   17 FUNCTION_DECL: TYPE . identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK

    identifier        shift, and go to state 33
    opt_left_bracket  shift, and go to state 34


State 14

    4 DECL: FUNCTION_DECL .

    $default  reduce using rule 4 (DECL)


State 15

    5 DECL: CLASS_DECL .

    $default  reduce using rule 5 (DECL)


State 16

    6 DECL: INTERFACE_DECL .

    $default  reduce using rule 6 (DECL)


State 17

    8 VAR_DECL: ERR .

    $default  reduce using rule 8 (VAR_DECL)


State 18

  116 ERR: error opt_semicolon .

    $default  reduce using rule 116 (ERR)


State 19

  112 ERR: error opt_left_bracket .

    $default  reduce using rule 112 (ERR)


State 20

  113 ERR: error opt_right_bracket .

    $default  reduce using rule 113 (ERR)


State 21

  110 ERR: error opt_left_brace .

    $default  reduce using rule 110 (ERR)


State 22

  111 ERR: error opt_right_brace .

    $default  reduce using rule 111 (ERR)


State 23

  114 ERR: error opt_left_parentheses .

    $default  reduce using rule 114 (ERR)


State 24

  115 ERR: error opt_right_parentheses .

    $default  reduce using rule 115 (ERR)


State 25

  117 ERR: error VARIABLE .

    $default  reduce using rule 117 (ERR)


State 26

    9 VARIABLE: TYPE . identifier
   16 TYPE: TYPE . opt_left_bracket opt_right_bracket

    identifier        shift, and go to state 35
    opt_left_bracket  shift, and go to state 34


State 27

   18 FUNCTION_DECL: vip_void identifier . opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK

    opt_left_parentheses  shift, and go to state 36


State 28

   21 CLASS_DECL: vip_class identifier . EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    error        shift, and go to state 1
    vip_extends  shift, and go to state 37

    error           [reduce using rule 23 (EXTENDS)]
    vip_implements  reduce using rule 23 (EXTENDS)
    opt_left_brace  reduce using rule 23 (EXTENDS)

    EXTENDS  go to state 38
    ERR      go to state 39


State 29

   35 INTERFACE_DECL: vip_interface identifier . opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

    opt_left_brace  shift, and go to state 40


State 30

    0 $accept: PROGRAM $end .

    $default  accept


State 31

    2 PROGRAM: DECL PROGRAM .

    $default  reduce using rule 2 (PROGRAM)


State 32

    7 VAR_DECL: VARIABLE opt_semicolon .

    $default  reduce using rule 7 (VAR_DECL)


State 33

    9 VARIABLE: TYPE identifier .
   17 FUNCTION_DECL: TYPE identifier . opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK

    opt_left_parentheses  shift, and go to state 41

    $default  reduce using rule 9 (VARIABLE)


State 34

   16 TYPE: TYPE opt_left_bracket . opt_right_bracket

    opt_right_bracket  shift, and go to state 42


State 35

    9 VARIABLE: TYPE identifier .

    $default  reduce using rule 9 (VARIABLE)


State 36

   18 FUNCTION_DECL: vip_void identifier opt_left_parentheses . FORMALS opt_right_parentheses STMT_BLOCK

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    $default  reduce using rule 20 (FORMALS)

    VARIABLE       go to state 43
    VARIABLE_PLUS  go to state 44
    TYPE           go to state 26
    FORMALS        go to state 45


State 37

   22 EXTENDS: vip_extends . identifier

    identifier  shift, and go to state 46


State 38

   21 CLASS_DECL: vip_class identifier EXTENDS . IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    error           shift, and go to state 1
    vip_implements  shift, and go to state 47

    opt_left_brace  reduce using rule 26 (IMPLEMENTS)

    IMPLEMENTS  go to state 48
    ERR         go to state 49


State 39

   24 EXTENDS: ERR .

    $default  reduce using rule 24 (EXTENDS)


State 40

   35 INTERFACE_DECL: vip_interface identifier opt_left_brace . PROTOTYPE_ASTERISK opt_right_brace

    error       shift, and go to state 1
    vip_void    shift, and go to state 50
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    opt_right_brace  reduce using rule 37 (PROTOTYPE_ASTERISK)

    TYPE                go to state 51
    PROTOTYPE_ASTERISK  go to state 52
    PROTOTYPE           go to state 53
    ERR                 go to state 54


State 41

   17 FUNCTION_DECL: TYPE identifier opt_left_parentheses . FORMALS opt_right_parentheses STMT_BLOCK

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    $default  reduce using rule 20 (FORMALS)

    VARIABLE       go to state 43
    VARIABLE_PLUS  go to state 44
    TYPE           go to state 26
    FORMALS        go to state 55


State 42

   16 TYPE: TYPE opt_left_bracket opt_right_bracket .

    $default  reduce using rule 16 (TYPE)


State 43

   10 VARIABLE_PLUS: VARIABLE . opt_coma VARIABLE_PLUS
   11              | VARIABLE .

    opt_coma  shift, and go to state 56

    $default  reduce using rule 11 (VARIABLE_PLUS)


State 44

   19 FORMALS: VARIABLE_PLUS .

    $default  reduce using rule 19 (FORMALS)


State 45

   18 FUNCTION_DECL: vip_void identifier opt_left_parentheses FORMALS . opt_right_parentheses STMT_BLOCK

    opt_right_parentheses  shift, and go to state 57


State 46

   22 EXTENDS: vip_extends identifier .

    $default  reduce using rule 22 (EXTENDS)


State 47

   25 IMPLEMENTS: vip_implements . IDENTIFIER_PLUS

    error       shift, and go to state 1
    identifier  shift, and go to state 58

    IDENTIFIER_PLUS  go to state 59
    ERR              go to state 60


State 48

   21 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS . opt_left_brace FIELD_ASTERISK opt_right_brace

    opt_left_brace  shift, and go to state 61


State 49

   27 IMPLEMENTS: ERR .

    $default  reduce using rule 27 (IMPLEMENTS)


State 50

   40 PROTOTYPE: vip_void . identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    identifier  shift, and go to state 62


State 51

   16 TYPE: TYPE . opt_left_bracket opt_right_bracket
   39 PROTOTYPE: TYPE . identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    identifier        shift, and go to state 63
    opt_left_bracket  shift, and go to state 34


State 52

   35 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK . opt_right_brace

    opt_right_brace  shift, and go to state 64


State 53

   36 PROTOTYPE_ASTERISK: PROTOTYPE . PROTOTYPE_ASTERISK

    error       shift, and go to state 1
    vip_void    shift, and go to state 50
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    opt_right_brace  reduce using rule 37 (PROTOTYPE_ASTERISK)

    TYPE                go to state 51
    PROTOTYPE_ASTERISK  go to state 65
    PROTOTYPE           go to state 53
    ERR                 go to state 54


State 54

   38 PROTOTYPE_ASTERISK: ERR .

    $default  reduce using rule 38 (PROTOTYPE_ASTERISK)


State 55

   17 FUNCTION_DECL: TYPE identifier opt_left_parentheses FORMALS . opt_right_parentheses STMT_BLOCK

    opt_right_parentheses  shift, and go to state 66


State 56

   10 VARIABLE_PLUS: VARIABLE opt_coma . VARIABLE_PLUS

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    VARIABLE       go to state 43
    VARIABLE_PLUS  go to state 67
    TYPE           go to state 26


State 57

   18 FUNCTION_DECL: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses . STMT_BLOCK

    opt_left_brace  shift, and go to state 68

    STMT_BLOCK  go to state 69


State 58

   28 IDENTIFIER_PLUS: identifier . opt_coma IDENTIFIER_PLUS
   29                | identifier .

    opt_coma  shift, and go to state 70

    $default  reduce using rule 29 (IDENTIFIER_PLUS)


State 59

   25 IMPLEMENTS: vip_implements IDENTIFIER_PLUS .

    $default  reduce using rule 25 (IMPLEMENTS)


State 60

   30 IDENTIFIER_PLUS: ERR .

    $default  reduce using rule 30 (IDENTIFIER_PLUS)


State 61

   21 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace . FIELD_ASTERISK opt_right_brace

    error       shift, and go to state 1
    vip_void    shift, and go to state 2
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    opt_right_brace  reduce using rule 32 (FIELD_ASTERISK)

    VAR_DECL        go to state 71
    VARIABLE        go to state 12
    TYPE            go to state 13
    FUNCTION_DECL   go to state 72
    FIELD_ASTERISK  go to state 73
    FIELD           go to state 74
    ERR             go to state 17


State 62

   40 PROTOTYPE: vip_void identifier . opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 75


State 63

   39 PROTOTYPE: TYPE identifier . opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 76


State 64

   35 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace .

    $default  reduce using rule 35 (INTERFACE_DECL)


State 65

   36 PROTOTYPE_ASTERISK: PROTOTYPE PROTOTYPE_ASTERISK .

    $default  reduce using rule 36 (PROTOTYPE_ASTERISK)


State 66

   17 FUNCTION_DECL: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses . STMT_BLOCK

    opt_left_brace  shift, and go to state 68

    STMT_BLOCK  go to state 77


State 67

   10 VARIABLE_PLUS: VARIABLE opt_coma VARIABLE_PLUS .

    $default  reduce using rule 10 (VARIABLE_PLUS)


State 68

   41 STMT_BLOCK: opt_left_brace . VARS STMTS opt_right_brace

    error       shift, and go to state 1
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    error                 [reduce using rule 43 (VARS)]
    vip_null              reduce using rule 43 (VARS)
    vip_this              reduce using rule 43 (VARS)
    vip_for               reduce using rule 43 (VARS)
    vip_while             reduce using rule 43 (VARS)
    vip_if                reduce using rule 43 (VARS)
    vip_return            reduce using rule 43 (VARS)
    vip_break             reduce using rule 43 (VARS)
    vip_New               reduce using rule 43 (VARS)
    vip_NewArray          reduce using rule 43 (VARS)
    vip_Print             reduce using rule 43 (VARS)
    vip_ReadInteger       reduce using rule 43 (VARS)
    vip_ReadLine          reduce using rule 43 (VARS)
    vip_Malloc            reduce using rule 43 (VARS)
    identifier            reduce using rule 43 (VARS)
    num_int               reduce using rule 43 (VARS)
    num_hex               reduce using rule 43 (VARS)
    num_double            reduce using rule 43 (VARS)
    val_string            reduce using rule 43 (VARS)
    val_bool              reduce using rule 43 (VARS)
    opt_minus             reduce using rule 43 (VARS)
    opt_not               reduce using rule 43 (VARS)
    opt_semicolon         reduce using rule 43 (VARS)
    opt_left_brace        reduce using rule 43 (VARS)
    opt_right_brace       reduce using rule 43 (VARS)
    opt_left_parentheses  reduce using rule 43 (VARS)

    VAR_DECL  go to state 78
    VARIABLE  go to state 12
    TYPE      go to state 26
    VARS      go to state 79
    ERR       go to state 17


State 69

   18 FUNCTION_DECL: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK .

    $default  reduce using rule 18 (FUNCTION_DECL)


State 70

   28 IDENTIFIER_PLUS: identifier opt_coma . IDENTIFIER_PLUS

    error       shift, and go to state 1
    identifier  shift, and go to state 58

    IDENTIFIER_PLUS  go to state 80
    ERR              go to state 60


State 71

   33 FIELD: VAR_DECL .

    $default  reduce using rule 33 (FIELD)


State 72

   34 FIELD: FUNCTION_DECL .

    $default  reduce using rule 34 (FIELD)


State 73

   21 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK . opt_right_brace

    opt_right_brace  shift, and go to state 81


State 74

   31 FIELD_ASTERISK: FIELD . FIELD_ASTERISK

    error       shift, and go to state 1
    vip_void    shift, and go to state 2
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    opt_right_brace  reduce using rule 32 (FIELD_ASTERISK)

    VAR_DECL        go to state 71
    VARIABLE        go to state 12
    TYPE            go to state 13
    FUNCTION_DECL   go to state 72
    FIELD_ASTERISK  go to state 82
    FIELD           go to state 74
    ERR             go to state 17


State 75

   40 PROTOTYPE: vip_void identifier opt_left_parentheses . FORMALS opt_right_parentheses opt_semicolon

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    $default  reduce using rule 20 (FORMALS)

    VARIABLE       go to state 43
    VARIABLE_PLUS  go to state 44
    TYPE           go to state 26
    FORMALS        go to state 83


State 76

   39 PROTOTYPE: TYPE identifier opt_left_parentheses . FORMALS opt_right_parentheses opt_semicolon

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    $default  reduce using rule 20 (FORMALS)

    VARIABLE       go to state 43
    VARIABLE_PLUS  go to state 44
    TYPE           go to state 26
    FORMALS        go to state 84


State 77

   17 FUNCTION_DECL: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses STMT_BLOCK .

    $default  reduce using rule 17 (FUNCTION_DECL)


State 78

   42 VARS: VAR_DECL . VARS

    error       shift, and go to state 1
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    error                 [reduce using rule 43 (VARS)]
    vip_null              reduce using rule 43 (VARS)
    vip_this              reduce using rule 43 (VARS)
    vip_for               reduce using rule 43 (VARS)
    vip_while             reduce using rule 43 (VARS)
    vip_if                reduce using rule 43 (VARS)
    vip_return            reduce using rule 43 (VARS)
    vip_break             reduce using rule 43 (VARS)
    vip_New               reduce using rule 43 (VARS)
    vip_NewArray          reduce using rule 43 (VARS)
    vip_Print             reduce using rule 43 (VARS)
    vip_ReadInteger       reduce using rule 43 (VARS)
    vip_ReadLine          reduce using rule 43 (VARS)
    vip_Malloc            reduce using rule 43 (VARS)
    identifier            reduce using rule 43 (VARS)
    num_int               reduce using rule 43 (VARS)
    num_hex               reduce using rule 43 (VARS)
    num_double            reduce using rule 43 (VARS)
    val_string            reduce using rule 43 (VARS)
    val_bool              reduce using rule 43 (VARS)
    opt_minus             reduce using rule 43 (VARS)
    opt_not               reduce using rule 43 (VARS)
    opt_semicolon         reduce using rule 43 (VARS)
    opt_left_brace        reduce using rule 43 (VARS)
    opt_right_brace       reduce using rule 43 (VARS)
    opt_left_parentheses  reduce using rule 43 (VARS)

    VAR_DECL  go to state 78
    VARIABLE  go to state 12
    TYPE      go to state 26
    VARS      go to state 85
    ERR       go to state 17


State 79

   41 STMT_BLOCK: opt_left_brace VARS . STMTS opt_right_brace

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon    reduce using rule 64 (EXPRESSION_Q)
    opt_right_brace  reduce using rule 45 (STMTS)

    STMT_BLOCK    go to state 108
    STMTS         go to state 109
    STATEMENT     go to state 110
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 80

   28 IDENTIFIER_PLUS: identifier opt_coma IDENTIFIER_PLUS .

    $default  reduce using rule 28 (IDENTIFIER_PLUS)


State 81

   21 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace .

    $default  reduce using rule 21 (CLASS_DECL)


State 82

   31 FIELD_ASTERISK: FIELD FIELD_ASTERISK .

    $default  reduce using rule 31 (FIELD_ASTERISK)


State 83

   40 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 123


State 84

   39 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 124


State 85

   42 VARS: VAR_DECL VARS .

    $default  reduce using rule 42 (VARS)


State 86

  109 CONST: vip_null .

    $default  reduce using rule 109 (CONST)


State 87

   70 EXPRESSION: vip_this .

    $default  reduce using rule 70 (EXPRESSION)


State 88

   59 FOR_STMT: vip_for . opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    opt_left_parentheses  shift, and go to state 125


State 89

   58 WHILE_STMT: vip_while . opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT

    opt_left_parentheses  shift, and go to state 126


State 90

   55 IF_STMT: vip_if . opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

    opt_left_parentheses  shift, and go to state 127


State 91

   60 RETURN_STMT: vip_return . EXPRESSION_Q opt_semicolon

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 64 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 128
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121


State 92

   61 BREAK_STMT: vip_break . opt_semicolon

    opt_semicolon  shift, and go to state 129


State 93

   88 EXPRESSION: vip_New . opt_left_parentheses identifier opt_right_parentheses

    opt_left_parentheses  shift, and go to state 130


State 94

   89 EXPRESSION: vip_NewArray . opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses

    opt_left_parentheses  shift, and go to state 131


State 95

   62 PRINT_STMT: vip_Print . opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 132


State 96

   90 EXPRESSION: vip_ReadInteger . opt_left_parentheses opt_right_parentheses

    opt_left_parentheses  shift, and go to state 133


State 97

   91 EXPRESSION: vip_ReadLine . opt_left_parentheses opt_right_parentheses

    opt_left_parentheses  shift, and go to state 134


State 98

   92 EXPRESSION: vip_Malloc . opt_left_parentheses EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 135


State 99

   93 VALUE: identifier .
   97 CALL: identifier . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 136

    $default  reduce using rule 93 (VALUE)


State 100

  104 CONST: num_int .

    $default  reduce using rule 104 (CONST)


State 101

  105 CONST: num_hex .

    $default  reduce using rule 105 (CONST)


State 102

  106 CONST: num_double .

    $default  reduce using rule 106 (CONST)


State 103

  108 CONST: val_string .

    $default  reduce using rule 108 (CONST)


State 104

  107 CONST: val_bool .

    $default  reduce using rule 107 (CONST)


State 105

   78 EXPRESSION: opt_minus . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 137
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 106

   87 EXPRESSION: opt_not . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 138
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 107

   72 EXPRESSION: opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 139
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 108

   53 STATEMENT: STMT_BLOCK .

    $default  reduce using rule 53 (STATEMENT)


State 109

   41 STMT_BLOCK: opt_left_brace VARS STMTS . opt_right_brace

    opt_right_brace  shift, and go to state 140


State 110

   44 STMTS: STATEMENT . STMTS

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon    reduce using rule 64 (EXPRESSION_Q)
    opt_right_brace  reduce using rule 45 (STMTS)

    STMT_BLOCK    go to state 108
    STMTS         go to state 141
    STATEMENT     go to state 110
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 111

   47 STATEMENT: IF_STMT .

    $default  reduce using rule 47 (STATEMENT)


State 112

   48 STATEMENT: WHILE_STMT .

    $default  reduce using rule 48 (STATEMENT)


State 113

   49 STATEMENT: FOR_STMT .

    $default  reduce using rule 49 (STATEMENT)


State 114

   51 STATEMENT: RETURN_STMT .

    $default  reduce using rule 51 (STATEMENT)


State 115

   50 STATEMENT: BREAK_STMT .

    $default  reduce using rule 50 (STATEMENT)


State 116

   52 STATEMENT: PRINT_STMT .

    $default  reduce using rule 52 (STATEMENT)


State 117

   46 STATEMENT: EXPRESSION_Q . opt_semicolon

    opt_semicolon  shift, and go to state 142


State 118

   63 EXPRESSION_Q: EXPRESSION .
   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 63 (EXPRESSION_Q)

    VALUE_P  go to state 158


State 119

   67 EXPRESSION: VALUE . opt_assign EXPRESSION
   69           | VALUE .

    opt_assign  shift, and go to state 159

    $default  reduce using rule 69 (EXPRESSION)


State 120

   71 EXPRESSION: CALL .

    $default  reduce using rule 71 (EXPRESSION)


State 121

   68 EXPRESSION: CONST .

    $default  reduce using rule 68 (EXPRESSION)


State 122

   54 STATEMENT: ERR .

    $default  reduce using rule 54 (STATEMENT)


State 123

   40 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 160


State 124

   39 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 161


State 125

   59 FOR_STMT: vip_for opt_left_parentheses . EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 64 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 162
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121


State 126

   58 WHILE_STMT: vip_while opt_left_parentheses . EXPRESSION opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 163
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 127

   55 IF_STMT: vip_if opt_left_parentheses . EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 164
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 128

   60 RETURN_STMT: vip_return EXPRESSION_Q . opt_semicolon

    opt_semicolon  shift, and go to state 165


State 129

   61 BREAK_STMT: vip_break opt_semicolon .

    $default  reduce using rule 61 (BREAK_STMT)


State 130

   88 EXPRESSION: vip_New opt_left_parentheses . identifier opt_right_parentheses

    identifier  shift, and go to state 166


State 131

   89 EXPRESSION: vip_NewArray opt_left_parentheses . EXPRESSION opt_coma TYPE opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 167
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 132

   62 PRINT_STMT: vip_Print opt_left_parentheses . EXPRESSION_PLUS opt_right_parentheses opt_semicolon

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION_PLUS  go to state 168
    EXPRESSION       go to state 169
    VALUE            go to state 119
    CALL             go to state 120
    CONST            go to state 121


State 133

   90 EXPRESSION: vip_ReadInteger opt_left_parentheses . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 170


State 134

   91 EXPRESSION: vip_ReadLine opt_left_parentheses . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 171


State 135

   92 EXPRESSION: vip_Malloc opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 172
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 136

   97 CALL: identifier opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 103 (ACTUAL)

    EXPRESSION_PLUS  go to state 173
    EXPRESSION       go to state 169
    VALUE            go to state 119
    CALL             go to state 120
    ACTUAL           go to state 174
    CONST            go to state 121


State 137

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   78           | opt_minus EXPRESSION .
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 78 (EXPRESSION)

    VALUE_P  go to state 158


State 138

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   87           | opt_not EXPRESSION .
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 87 (EXPRESSION)

    VALUE_P  go to state 158


State 139

   72 EXPRESSION: opt_left_parentheses EXPRESSION . opt_right_parentheses
   73           | EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 175

    VALUE_P  go to state 158


State 140

   41 STMT_BLOCK: opt_left_brace VARS STMTS opt_right_brace .

    $default  reduce using rule 41 (STMT_BLOCK)


State 141

   44 STMTS: STATEMENT STMTS .

    $default  reduce using rule 44 (STMTS)


State 142

   46 STATEMENT: EXPRESSION_Q opt_semicolon .

    $default  reduce using rule 46 (STATEMENT)


State 143

   73 EXPRESSION: EXPRESSION opt_plus . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 176
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 144

   74 EXPRESSION: EXPRESSION opt_minus . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 177
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 145

   76 EXPRESSION: EXPRESSION opt_times . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 178
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 146

   75 EXPRESSION: EXPRESSION opt_divide . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 179
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 147

   77 EXPRESSION: EXPRESSION opt_mod . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 180
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 148

   79 EXPRESSION: EXPRESSION opt_lower . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 181
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 149

   80 EXPRESSION: EXPRESSION opt_lower_equal . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 182
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 150

   81 EXPRESSION: EXPRESSION opt_greater . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 183
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 151

   82 EXPRESSION: EXPRESSION opt_greater_equal . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 184
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 152

   83 EXPRESSION: EXPRESSION opt_equal . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 185
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 153

   84 EXPRESSION: EXPRESSION opt_not_equal . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 186
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 154

   85 EXPRESSION: EXPRESSION opt_and . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 187
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 155

   86 EXPRESSION: EXPRESSION opt_or . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 188
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 156

   95 VALUE_P: opt_dot . identifier
   98 CALL: EXPRESSION opt_dot . identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION opt_dot . LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    vip_GetByte  shift, and go to state 189
    vip_SetByte  shift, and go to state 190
    identifier   shift, and go to state 191

    LIB_CALL  go to state 192


State 157

   96 VALUE_P: opt_left_bracket . EXPRESSION opt_right_bracket

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 193
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 158

   94 VALUE: EXPRESSION VALUE_P .

    $default  reduce using rule 94 (VALUE)


State 159

   67 EXPRESSION: VALUE opt_assign . EXPRESSION

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 194
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 160

   40 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 40 (PROTOTYPE)


State 161

   39 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 39 (PROTOTYPE)


State 162

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q . opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    opt_semicolon  shift, and go to state 195


State 163

   58 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION . opt_right_parentheses STATEMENT
   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 196

    VALUE_P  go to state 158


State 164

   55 IF_STMT: vip_if opt_left_parentheses EXPRESSION . opt_right_parentheses STATEMENT ELSE_STMT
   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 197

    VALUE_P  go to state 158


State 165

   60 RETURN_STMT: vip_return EXPRESSION_Q opt_semicolon .

    $default  reduce using rule 60 (RETURN_STMT)


State 166

   88 EXPRESSION: vip_New opt_left_parentheses identifier . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 198


State 167

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   89           | vip_NewArray opt_left_parentheses EXPRESSION . opt_coma TYPE opt_right_parentheses
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_coma           shift, and go to state 199
    opt_left_bracket   shift, and go to state 157

    VALUE_P  go to state 158


State 168

   62 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 200


State 169

   65 EXPRESSION_PLUS: EXPRESSION . opt_coma EXPRESSION_PLUS
   66                | EXPRESSION .
   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_coma           shift, and go to state 201
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 66 (EXPRESSION_PLUS)

    VALUE_P  go to state 158


State 170

   90 EXPRESSION: vip_ReadInteger opt_left_parentheses opt_right_parentheses .

    $default  reduce using rule 90 (EXPRESSION)


State 171

   91 EXPRESSION: vip_ReadLine opt_left_parentheses opt_right_parentheses .

    $default  reduce using rule 91 (EXPRESSION)


State 172

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   92           | vip_Malloc opt_left_parentheses EXPRESSION . opt_right_parentheses
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 202

    VALUE_P  go to state 158


State 173

  102 ACTUAL: EXPRESSION_PLUS .

    $default  reduce using rule 102 (ACTUAL)


State 174

   97 CALL: identifier opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 203


State 175

   72 EXPRESSION: opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 72 (EXPRESSION)


State 176

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   73           | EXPRESSION opt_plus EXPRESSION .
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 73 (EXPRESSION)

    VALUE_P  go to state 158


State 177

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   74           | EXPRESSION opt_minus EXPRESSION .
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 74 (EXPRESSION)

    VALUE_P  go to state 158


State 178

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   76           | EXPRESSION opt_times EXPRESSION .
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 76 (EXPRESSION)

    VALUE_P  go to state 158


State 179

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   75           | EXPRESSION opt_divide EXPRESSION .
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 75 (EXPRESSION)

    VALUE_P  go to state 158


State 180

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   77           | EXPRESSION opt_mod EXPRESSION .
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 77 (EXPRESSION)

    VALUE_P  go to state 158


State 181

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   79           | EXPRESSION opt_lower EXPRESSION .
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 143
    opt_minus         shift, and go to state 144
    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 79 (EXPRESSION)

    VALUE_P  go to state 158


State 182

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   80           | EXPRESSION opt_lower_equal EXPRESSION .
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 143
    opt_minus         shift, and go to state 144
    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 80 (EXPRESSION)

    VALUE_P  go to state 158


State 183

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   81           | EXPRESSION opt_greater EXPRESSION .
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 143
    opt_minus         shift, and go to state 144
    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 81 (EXPRESSION)

    VALUE_P  go to state 158


State 184

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   82           | EXPRESSION opt_greater_equal EXPRESSION .
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 143
    opt_minus         shift, and go to state 144
    opt_times         shift, and go to state 145
    opt_divide        shift, and go to state 146
    opt_mod           shift, and go to state 147
    opt_dot           shift, and go to state 156
    opt_left_bracket  shift, and go to state 157

    $default  reduce using rule 82 (EXPRESSION)

    VALUE_P  go to state 158


State 185

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   83           | EXPRESSION opt_equal EXPRESSION .
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 83 (EXPRESSION)

    VALUE_P  go to state 158


State 186

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   84           | EXPRESSION opt_not_equal EXPRESSION .
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 84 (EXPRESSION)

    VALUE_P  go to state 158


State 187

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   85           | EXPRESSION opt_and EXPRESSION .
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 85 (EXPRESSION)

    VALUE_P  go to state 158


State 188

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   86           | EXPRESSION opt_or EXPRESSION .
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 86 (EXPRESSION)

    VALUE_P  go to state 158


State 189

  100 LIB_CALL: vip_GetByte . opt_left_parentheses EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 204


State 190

  101 LIB_CALL: vip_SetByte . opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 205


State 191

   95 VALUE_P: opt_dot identifier .
   98 CALL: EXPRESSION opt_dot identifier . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 206

    $default  reduce using rule 95 (VALUE_P)


State 192

   99 CALL: EXPRESSION opt_dot LIB_CALL . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 207


State 193

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   96 VALUE_P: opt_left_bracket EXPRESSION . opt_right_bracket
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157
    opt_right_bracket  shift, and go to state 208

    VALUE_P  go to state 158


State 194

   67 EXPRESSION: VALUE opt_assign EXPRESSION .
   73           | EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    $default  reduce using rule 67 (EXPRESSION)

    VALUE_P  go to state 158


State 195

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon . EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 209
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 196

   58 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon  reduce using rule 64 (EXPRESSION_Q)

    STMT_BLOCK    go to state 108
    STATEMENT     go to state 210
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 197

   55 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses . STATEMENT ELSE_STMT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon  reduce using rule 64 (EXPRESSION_Q)

    STMT_BLOCK    go to state 108
    STATEMENT     go to state 211
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 198

   88 EXPRESSION: vip_New opt_left_parentheses identifier opt_right_parentheses .

    $default  reduce using rule 88 (EXPRESSION)


State 199

   89 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma . TYPE opt_right_parentheses

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6

    TYPE  go to state 212


State 200

   62 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 213


State 201

   65 EXPRESSION_PLUS: EXPRESSION opt_coma . EXPRESSION_PLUS

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION_PLUS  go to state 214
    EXPRESSION       go to state 169
    VALUE            go to state 119
    CALL             go to state 120
    CONST            go to state 121


State 202

   92 EXPRESSION: vip_Malloc opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 92 (EXPRESSION)


State 203

   97 CALL: identifier opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 97 (CALL)


State 204

  100 LIB_CALL: vip_GetByte opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 215
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 205

  101 LIB_CALL: vip_SetByte opt_left_parentheses . EXPRESSION opt_coma EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 216
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 206

   98 CALL: EXPRESSION opt_dot identifier opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 103 (ACTUAL)

    EXPRESSION_PLUS  go to state 173
    EXPRESSION       go to state 169
    VALUE            go to state 119
    CALL             go to state 120
    ACTUAL           go to state 217
    CONST            go to state 121


State 207

   99 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 103 (ACTUAL)

    EXPRESSION_PLUS  go to state 173
    EXPRESSION       go to state 169
    VALUE            go to state 119
    CALL             go to state 120
    ACTUAL           go to state 218
    CONST            go to state 121


State 208

   96 VALUE_P: opt_left_bracket EXPRESSION opt_right_bracket .

    $default  reduce using rule 96 (VALUE_P)


State 209

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION . opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT
   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_semicolon      shift, and go to state 219
    opt_dot            shift, and go to state 156
    opt_left_bracket   shift, and go to state 157

    VALUE_P  go to state 158


State 210

   58 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT .

    $default  reduce using rule 58 (WHILE_STMT)


State 211

   55 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT . ELSE_STMT

    vip_else  shift, and go to state 220

    vip_else  [reduce using rule 57 (ELSE_STMT)]
    $default  reduce using rule 57 (ELSE_STMT)

    ELSE_STMT  go to state 221


State 212

   16 TYPE: TYPE . opt_left_bracket opt_right_bracket
   89 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE . opt_right_parentheses

    opt_left_bracket       shift, and go to state 34
    opt_right_parentheses  shift, and go to state 222


State 213

   62 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 62 (PRINT_STMT)


State 214

   65 EXPRESSION_PLUS: EXPRESSION opt_coma EXPRESSION_PLUS .

    $default  reduce using rule 65 (EXPRESSION_PLUS)


State 215

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  100 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION . opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 223

    VALUE_P  go to state 158


State 216

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  101 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION . opt_coma EXPRESSION opt_right_parentheses

    opt_plus           shift, and go to state 143
    opt_minus          shift, and go to state 144
    opt_times          shift, and go to state 145
    opt_divide         shift, and go to state 146
    opt_mod            shift, and go to state 147
    opt_lower          shift, and go to state 148
    opt_lower_equal    shift, and go to state 149
    opt_greater        shift, and go to state 150
    opt_greater_equal  shift, and go to state 151
    opt_equal          shift, and go to state 152
    opt_not_equal      shift, and go to state 153
    opt_and            shift, and go to state 154
    opt_or             shift, and go to state 155
    opt_dot            shift, and go to state 156
    opt_coma           shift, and go to state 224
    opt_left_bracket   shift, and go to state 157

    VALUE_P  go to state 158


State 217

   98 CALL: EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 225


State 218

   99 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 226


State 219

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon . EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    $default  reduce using rule 64 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 227
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121


State 220

   56 ELSE_STMT: vip_else . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon  reduce using rule 64 (EXPRESSION_Q)

    STMT_BLOCK    go to state 108
    STATEMENT     go to state 228
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 221

   55 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT .

    $default  reduce using rule 55 (IF_STMT)


State 222

   89 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses .

    $default  reduce using rule 89 (EXPRESSION)


State 223

  100 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 100 (LIB_CALL)


State 224

  101 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_parentheses  shift, and go to state 107

    EXPRESSION  go to state 229
    VALUE       go to state 119
    CALL        go to state 120
    CONST       go to state 121


State 225

   98 CALL: EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 98 (CALL)


State 226

   99 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 99 (CALL)


State 227

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q . opt_right_parentheses STATEMENT

    opt_right_parentheses  shift, and go to state 230


State 228

   56 ELSE_STMT: vip_else STATEMENT .

    $default  reduce using rule 56 (ELSE_STMT)


State 229

   73 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   74           | EXPRESSION . opt_minus EXPRESSION
   75           | EXPRESSION . opt_divide EXPRESSION
   76           | EXPRESSION . opt_times EXPRESSION
   77           | EXPRESSION . opt_mod EXPRESSION
   79           | EXPRESSION . opt_lower EXPRESSION
   80           | EXPRESSION . opt_lower_equal EXPRESSION
   81           | EXPRESSION . opt_greater EXPRESSION
   82           | EXPRESSION . opt_greater_equal EXPRESSION
   83           | EXPRESSION . opt_equal EXPRESSION
   84           | EXPRESSION . opt_not_equal EXPRESSION
   85           | EXPRESSION . opt_and EXPRESSION
   86           | EXPRESSION . opt_or EXPRESSION
   94 VALUE: EXPRESSION . VALUE_P
   98 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
   99     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  101 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION . opt_right_parentheses

    opt_plus               shift, and go to state 143
    opt_minus              shift, and go to state 144
    opt_times              shift, and go to state 145
    opt_divide             shift, and go to state 146
    opt_mod                shift, and go to state 147
    opt_lower              shift, and go to state 148
    opt_lower_equal        shift, and go to state 149
    opt_greater            shift, and go to state 150
    opt_greater_equal      shift, and go to state 151
    opt_equal              shift, and go to state 152
    opt_not_equal          shift, and go to state 153
    opt_and                shift, and go to state 154
    opt_or                 shift, and go to state 155
    opt_dot                shift, and go to state 156
    opt_left_bracket       shift, and go to state 157
    opt_right_parentheses  shift, and go to state 231

    VALUE_P  go to state 158


State 230

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 86
    vip_this              shift, and go to state 87
    vip_for               shift, and go to state 88
    vip_while             shift, and go to state 89
    vip_if                shift, and go to state 90
    vip_return            shift, and go to state 91
    vip_break             shift, and go to state 92
    vip_New               shift, and go to state 93
    vip_NewArray          shift, and go to state 94
    vip_Print             shift, and go to state 95
    vip_ReadInteger       shift, and go to state 96
    vip_ReadLine          shift, and go to state 97
    vip_Malloc            shift, and go to state 98
    identifier            shift, and go to state 99
    num_int               shift, and go to state 100
    num_hex               shift, and go to state 101
    num_double            shift, and go to state 102
    val_string            shift, and go to state 103
    val_bool              shift, and go to state 104
    opt_minus             shift, and go to state 105
    opt_not               shift, and go to state 106
    opt_left_brace        shift, and go to state 68
    opt_left_parentheses  shift, and go to state 107

    opt_semicolon  reduce using rule 64 (EXPRESSION_Q)

    STMT_BLOCK    go to state 108
    STATEMENT     go to state 232
    IF_STMT       go to state 111
    WHILE_STMT    go to state 112
    FOR_STMT      go to state 113
    RETURN_STMT   go to state 114
    BREAK_STMT    go to state 115
    PRINT_STMT    go to state 116
    EXPRESSION_Q  go to state 117
    EXPRESSION    go to state 118
    VALUE         go to state 119
    CALL          go to state 120
    CONST         go to state 121
    ERR           go to state 122


State 231

  101 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses .

    $default  reduce using rule 101 (LIB_CALL)


State 232

   59 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT .

    $default  reduce using rule 59 (FOR_STMT)
