State 30 conflicts: 1 shift/reduce
State 88 conflicts: 2 shift/reduce
State 94 conflicts: 2 shift/reduce
State 220 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: DECL
    2        | DECL PROGRAM

    3 DECL: VAR_DECL
    4     | FUNCTION_DECL
    5     | CLASS_DECL
    6     | INTERFACE_DECL

    7 VAR_DECL: VARIABLE opt_semicolon
    8         | ERR

    9 VARIABLE: vip_const TYPE identifier
   10         | TYPE identifier

   11 $@1: %empty

   12 VARIABLE_PLUS: VARIABLE opt_coma $@1 VARIABLE_PLUS
   13              | VARIABLE

   14 TYPE: vip_int
   15     | vip_double
   16     | vip_bool
   17     | vip_string
   18     | TYPE opt_left_bracket opt_right_bracket
   19     | identifier

   20 $@2: %empty

   21 $@3: %empty

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses $@3 FORMALS opt_right_parentheses STMT_BLOCK

   23 $@4: %empty

   24 $@5: %empty

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses $@5 FORMALS opt_right_parentheses STMT_BLOCK

   26 FORMALS: VARIABLE_PLUS
   27        | %empty

   28 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

   29 EXTENDS: vip_extends identifier
   30        | %empty
   31        | ERR

   32 IMPLEMENTS: vip_implements IDENTIFIER_PLUS
   33           | %empty
   34           | ERR

   35 IDENTIFIER_PLUS: identifier opt_coma IDENTIFIER_PLUS
   36                | identifier
   37                | ERR

   38 FIELD_ASTERISK: FIELD FIELD_ASTERISK
   39               | %empty

   40 FIELD: VAR_DECL
   41      | FUNCTION_DECL

   42 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

   43 PROTOTYPE_ASTERISK: PROTOTYPE PROTOTYPE_ASTERISK
   44                   | %empty
   45                   | ERR

   46 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon
   47          | vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

   48 STMT_BLOCK: opt_left_brace VARS STMTS opt_right_brace

   49 VARS: VAR_DECL VARS
   50     | %empty

   51 STMTS: STATEMENT STMTS
   52      | %empty

   53 STATEMENT: EXPRESSION_Q opt_semicolon
   54          | IF_STMT
   55          | WHILE_STMT
   56          | FOR_STMT
   57          | BREAK_STMT
   58          | RETURN_STMT
   59          | PRINT_STMT
   60          | STMT_BLOCK
   61          | ERR

   62 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

   63 ELSE_STMT: vip_else STATEMENT
   64          | %empty

   65 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

   67 RETURN_STMT: vip_return EXPRESSION_Q opt_semicolon

   68 BREAK_STMT: vip_break opt_semicolon

   69 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon

   70 EXPRESSION_Q: EXPRESSION
   71             | %empty

   72 EXPRESSION_PLUS: EXPRESSION opt_coma EXPRESSION_PLUS
   73                | EXPRESSION

   74 EXPRESSION: VALUE opt_assign EXPRESSION
   75           | CONST
   76           | VALUE
   77           | vip_this
   78           | CALL
   79           | opt_left_parentheses EXPRESSION opt_right_parentheses
   80           | EXPRESSION opt_plus EXPRESSION
   81           | EXPRESSION opt_minus EXPRESSION
   82           | EXPRESSION opt_divide EXPRESSION
   83           | EXPRESSION opt_times EXPRESSION
   84           | EXPRESSION opt_mod EXPRESSION
   85           | opt_minus EXPRESSION
   86           | EXPRESSION opt_lower EXPRESSION
   87           | EXPRESSION opt_lower_equal EXPRESSION
   88           | EXPRESSION opt_greater EXPRESSION
   89           | EXPRESSION opt_greater_equal EXPRESSION
   90           | EXPRESSION opt_equal EXPRESSION
   91           | EXPRESSION opt_not_equal EXPRESSION
   92           | EXPRESSION opt_and EXPRESSION
   93           | EXPRESSION opt_or EXPRESSION
   94           | opt_not EXPRESSION
   95           | vip_New opt_left_parentheses identifier opt_right_parentheses
   96           | vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses
   97           | vip_ReadInteger opt_left_parentheses opt_right_parentheses
   98           | vip_ReadLine opt_left_parentheses opt_right_parentheses
   99           | vip_Malloc opt_left_parentheses EXPRESSION opt_right_parentheses

  100 VALUE: identifier
  101      | EXPRESSION VALUE_P

  102 VALUE_P: opt_dot identifier
  103        | opt_left_bracket EXPRESSION opt_right_bracket

  104 CALL: identifier opt_left_parentheses ACTUAL opt_right_parentheses
  105     | EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

  107 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION opt_right_parentheses
  108         | vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses

  109 ACTUAL: EXPRESSION_PLUS
  110       | %empty

  111 CONST: num_int
  112      | num_hex
  113      | num_double
  114      | val_bool
  115      | val_string
  116      | vip_null

  117 ERR: error opt_left_brace
  118    | error opt_right_brace
  119    | error opt_left_bracket
  120    | error opt_right_bracket
  121    | error opt_left_parentheses
  122    | error opt_right_parentheses
  123    | error opt_semicolon
  124    | error VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256) 117 118 119 120 121 122 123 124
vip_void (258) 25 47
vip_int (259) 14
vip_double (260) 15
vip_bool (261) 16
vip_string (262) 17
vip_class (263) 28
vip_interface (264) 42
vip_null (265) 116
vip_this (266) 77
vip_extends (267) 29
vip_implements (268) 32
vip_for (269) 66
vip_while (270) 65
vip_if (271) 62
vip_else (272) 63
vip_return (273) 67
vip_break (274) 68
vip_New (275) 95
vip_NewArray (276) 96
vip_Print (277) 69
vip_ReadInteger (278) 97
vip_ReadLine (279) 98
vip_Malloc (280) 99
vip_GetByte (281) 107
vip_SetByte (282) 108
vip_const (283) 9
identifier (284) 9 10 19 22 25 28 29 35 36 42 46 47 95 100 102 104
    105
num_int (285) 111
num_hex (286) 112
num_double (287) 113
val_string (288) 115
val_bool (289) 114
opt_plus (290) 80
opt_minus (291) 81 85
opt_times (292) 83
opt_divide (293) 82
opt_mod (294) 84
opt_lower (295) 86
opt_lower_equal (296) 87
opt_greater (297) 88
opt_greater_equal (298) 89
opt_assign (299) 74
opt_equal (300) 90
opt_not_equal (301) 91
opt_and (302) 92
opt_or (303) 93
opt_not (304) 94
opt_semicolon (305) 7 46 47 53 66 67 68 69 123
opt_dot (306) 102 105 106
opt_coma (307) 12 35 72 96 108
opt_left_bracket (308) 18 103 119
opt_right_bracket (309) 18 103 120
opt_left_brace (310) 28 42 48 117
opt_right_brace (311) 28 42 48 118
opt_left_parentheses (312) 22 25 46 47 62 65 66 69 79 95 96 97 98 99
    104 105 106 107 108 121
opt_right_parentheses (313) 22 25 46 47 62 65 66 69 79 95 96 97 98
    99 104 105 106 107 108 122


Nonterminals, with rules where they appear

$accept (59)
    on left: 0
PROGRAM (60)
    on left: 1 2, on right: 0 2
DECL (61)
    on left: 3 4 5 6, on right: 1 2
VAR_DECL (62)
    on left: 7 8, on right: 3 40 49
VARIABLE (63)
    on left: 9 10, on right: 7 12 13 124
VARIABLE_PLUS (64)
    on left: 12 13, on right: 12 26
$@1 (65)
    on left: 11, on right: 12
TYPE (66)
    on left: 14 15 16 17 18 19, on right: 9 10 18 22 46 96
FUNCTION_DECL (67)
    on left: 22 25, on right: 4 41
$@2 (68)
    on left: 20, on right: 22
$@3 (69)
    on left: 21, on right: 22
$@4 (70)
    on left: 23, on right: 25
$@5 (71)
    on left: 24, on right: 25
FORMALS (72)
    on left: 26 27, on right: 22 25 46 47
CLASS_DECL (73)
    on left: 28, on right: 5
EXTENDS (74)
    on left: 29 30 31, on right: 28
IMPLEMENTS (75)
    on left: 32 33 34, on right: 28
IDENTIFIER_PLUS (76)
    on left: 35 36 37, on right: 32 35
FIELD_ASTERISK (77)
    on left: 38 39, on right: 28 38
FIELD (78)
    on left: 40 41, on right: 38
INTERFACE_DECL (79)
    on left: 42, on right: 6
PROTOTYPE_ASTERISK (80)
    on left: 43 44 45, on right: 42 43
PROTOTYPE (81)
    on left: 46 47, on right: 43
STMT_BLOCK (82)
    on left: 48, on right: 22 25 60
VARS (83)
    on left: 49 50, on right: 48 49
STMTS (84)
    on left: 51 52, on right: 48 51
STATEMENT (85)
    on left: 53 54 55 56 57 58 59 60 61, on right: 51 62 63 65 66
IF_STMT (86)
    on left: 62, on right: 54
ELSE_STMT (87)
    on left: 63 64, on right: 62
WHILE_STMT (88)
    on left: 65, on right: 55
FOR_STMT (89)
    on left: 66, on right: 56
RETURN_STMT (90)
    on left: 67, on right: 58
BREAK_STMT (91)
    on left: 68, on right: 57
PRINT_STMT (92)
    on left: 69, on right: 59
EXPRESSION_Q (93)
    on left: 70 71, on right: 53 66 67
EXPRESSION_PLUS (94)
    on left: 72 73, on right: 69 72 109
EXPRESSION (95)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91
    92 93 94 95 96 97 98 99, on right: 62 65 66 70 72 73 74 79 80 81
    82 83 84 85 86 87 88 89 90 91 92 93 94 96 99 101 103 105 106 107
    108
VALUE (96)
    on left: 100 101, on right: 74 76
VALUE_P (97)
    on left: 102 103, on right: 101
CALL (98)
    on left: 104 105 106, on right: 78
LIB_CALL (99)
    on left: 107 108, on right: 106
ACTUAL (100)
    on left: 109 110, on right: 104 105 106
CONST (101)
    on left: 111 112 113 114 115 116, on right: 75
ERR (102)
    on left: 117 118 119 120 121 122 123 124, on right: 8 31 34 37
    45 61


State 0

    0 $accept: . PROGRAM $end

    error          shift, and go to state 1
    vip_void       shift, and go to state 2
    vip_int        shift, and go to state 3
    vip_double     shift, and go to state 4
    vip_bool       shift, and go to state 5
    vip_string     shift, and go to state 6
    vip_class      shift, and go to state 7
    vip_interface  shift, and go to state 8
    vip_const      shift, and go to state 9
    identifier     shift, and go to state 10

    PROGRAM         go to state 11
    DECL            go to state 12
    VAR_DECL        go to state 13
    VARIABLE        go to state 14
    TYPE            go to state 15
    FUNCTION_DECL   go to state 16
    CLASS_DECL      go to state 17
    INTERFACE_DECL  go to state 18
    ERR             go to state 19


State 1

  117 ERR: error . opt_left_brace
  118    | error . opt_right_brace
  119    | error . opt_left_bracket
  120    | error . opt_right_bracket
  121    | error . opt_left_parentheses
  122    | error . opt_right_parentheses
  123    | error . opt_semicolon
  124    | error . VARIABLE

    vip_int                shift, and go to state 3
    vip_double             shift, and go to state 4
    vip_bool               shift, and go to state 5
    vip_string             shift, and go to state 6
    vip_const              shift, and go to state 9
    identifier             shift, and go to state 10
    opt_semicolon          shift, and go to state 20
    opt_left_bracket       shift, and go to state 21
    opt_right_bracket      shift, and go to state 22
    opt_left_brace         shift, and go to state 23
    opt_right_brace        shift, and go to state 24
    opt_left_parentheses   shift, and go to state 25
    opt_right_parentheses  shift, and go to state 26

    VARIABLE  go to state 27
    TYPE      go to state 28


State 2

   25 FUNCTION_DECL: vip_void . identifier $@4 opt_left_parentheses $@5 FORMALS opt_right_parentheses STMT_BLOCK

    identifier  shift, and go to state 29


State 3

   14 TYPE: vip_int .

    $default  reduce using rule 14 (TYPE)


State 4

   15 TYPE: vip_double .

    $default  reduce using rule 15 (TYPE)


State 5

   16 TYPE: vip_bool .

    $default  reduce using rule 16 (TYPE)


State 6

   17 TYPE: vip_string .

    $default  reduce using rule 17 (TYPE)


State 7

   28 CLASS_DECL: vip_class . identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    identifier  shift, and go to state 30


State 8

   42 INTERFACE_DECL: vip_interface . identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

    identifier  shift, and go to state 31


State 9

    9 VARIABLE: vip_const . TYPE identifier

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    identifier  shift, and go to state 10

    TYPE  go to state 32


State 10

   19 TYPE: identifier .

    $default  reduce using rule 19 (TYPE)


State 11

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 33


State 12

    1 PROGRAM: DECL .
    2        | DECL . PROGRAM

    error          shift, and go to state 1
    vip_void       shift, and go to state 2
    vip_int        shift, and go to state 3
    vip_double     shift, and go to state 4
    vip_bool       shift, and go to state 5
    vip_string     shift, and go to state 6
    vip_class      shift, and go to state 7
    vip_interface  shift, and go to state 8
    vip_const      shift, and go to state 9
    identifier     shift, and go to state 10

    $end  reduce using rule 1 (PROGRAM)

    PROGRAM         go to state 34
    DECL            go to state 12
    VAR_DECL        go to state 13
    VARIABLE        go to state 14
    TYPE            go to state 15
    FUNCTION_DECL   go to state 16
    CLASS_DECL      go to state 17
    INTERFACE_DECL  go to state 18
    ERR             go to state 19


State 13

    3 DECL: VAR_DECL .

    $default  reduce using rule 3 (DECL)


State 14

    7 VAR_DECL: VARIABLE . opt_semicolon

    opt_semicolon  shift, and go to state 35


State 15

   10 VARIABLE: TYPE . identifier
   18 TYPE: TYPE . opt_left_bracket opt_right_bracket
   22 FUNCTION_DECL: TYPE . identifier $@2 opt_left_parentheses $@3 FORMALS opt_right_parentheses STMT_BLOCK

    identifier        shift, and go to state 36
    opt_left_bracket  shift, and go to state 37


State 16

    4 DECL: FUNCTION_DECL .

    $default  reduce using rule 4 (DECL)


State 17

    5 DECL: CLASS_DECL .

    $default  reduce using rule 5 (DECL)


State 18

    6 DECL: INTERFACE_DECL .

    $default  reduce using rule 6 (DECL)


State 19

    8 VAR_DECL: ERR .

    $default  reduce using rule 8 (VAR_DECL)


State 20

  123 ERR: error opt_semicolon .

    $default  reduce using rule 123 (ERR)


State 21

  119 ERR: error opt_left_bracket .

    $default  reduce using rule 119 (ERR)


State 22

  120 ERR: error opt_right_bracket .

    $default  reduce using rule 120 (ERR)


State 23

  117 ERR: error opt_left_brace .

    $default  reduce using rule 117 (ERR)


State 24

  118 ERR: error opt_right_brace .

    $default  reduce using rule 118 (ERR)


State 25

  121 ERR: error opt_left_parentheses .

    $default  reduce using rule 121 (ERR)


State 26

  122 ERR: error opt_right_parentheses .

    $default  reduce using rule 122 (ERR)


State 27

  124 ERR: error VARIABLE .

    $default  reduce using rule 124 (ERR)


State 28

   10 VARIABLE: TYPE . identifier
   18 TYPE: TYPE . opt_left_bracket opt_right_bracket

    identifier        shift, and go to state 38
    opt_left_bracket  shift, and go to state 37


State 29

   25 FUNCTION_DECL: vip_void identifier . $@4 opt_left_parentheses $@5 FORMALS opt_right_parentheses STMT_BLOCK

    $default  reduce using rule 23 ($@4)

    $@4  go to state 39


State 30

   28 CLASS_DECL: vip_class identifier . EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    error        shift, and go to state 1
    vip_extends  shift, and go to state 40

    error           [reduce using rule 30 (EXTENDS)]
    vip_implements  reduce using rule 30 (EXTENDS)
    opt_left_brace  reduce using rule 30 (EXTENDS)

    EXTENDS  go to state 41
    ERR      go to state 42


State 31

   42 INTERFACE_DECL: vip_interface identifier . opt_left_brace PROTOTYPE_ASTERISK opt_right_brace

    opt_left_brace  shift, and go to state 43


State 32

    9 VARIABLE: vip_const TYPE . identifier
   18 TYPE: TYPE . opt_left_bracket opt_right_bracket

    identifier        shift, and go to state 44
    opt_left_bracket  shift, and go to state 37


State 33

    0 $accept: PROGRAM $end .

    $default  accept


State 34

    2 PROGRAM: DECL PROGRAM .

    $default  reduce using rule 2 (PROGRAM)


State 35

    7 VAR_DECL: VARIABLE opt_semicolon .

    $default  reduce using rule 7 (VAR_DECL)


State 36

   10 VARIABLE: TYPE identifier .
   22 FUNCTION_DECL: TYPE identifier . $@2 opt_left_parentheses $@3 FORMALS opt_right_parentheses STMT_BLOCK

    opt_left_parentheses  reduce using rule 20 ($@2)
    $default              reduce using rule 10 (VARIABLE)

    $@2  go to state 45


State 37

   18 TYPE: TYPE opt_left_bracket . opt_right_bracket

    opt_right_bracket  shift, and go to state 46


State 38

   10 VARIABLE: TYPE identifier .

    $default  reduce using rule 10 (VARIABLE)


State 39

   25 FUNCTION_DECL: vip_void identifier $@4 . opt_left_parentheses $@5 FORMALS opt_right_parentheses STMT_BLOCK

    opt_left_parentheses  shift, and go to state 47


State 40

   29 EXTENDS: vip_extends . identifier

    identifier  shift, and go to state 48


State 41

   28 CLASS_DECL: vip_class identifier EXTENDS . IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace

    error           shift, and go to state 1
    vip_implements  shift, and go to state 49

    opt_left_brace  reduce using rule 33 (IMPLEMENTS)

    IMPLEMENTS  go to state 50
    ERR         go to state 51


State 42

   31 EXTENDS: ERR .

    $default  reduce using rule 31 (EXTENDS)


State 43

   42 INTERFACE_DECL: vip_interface identifier opt_left_brace . PROTOTYPE_ASTERISK opt_right_brace

    error       shift, and go to state 1
    vip_void    shift, and go to state 52
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    identifier  shift, and go to state 10

    opt_right_brace  reduce using rule 44 (PROTOTYPE_ASTERISK)

    TYPE                go to state 53
    PROTOTYPE_ASTERISK  go to state 54
    PROTOTYPE           go to state 55
    ERR                 go to state 56


State 44

    9 VARIABLE: vip_const TYPE identifier .

    $default  reduce using rule 9 (VARIABLE)


State 45

   22 FUNCTION_DECL: TYPE identifier $@2 . opt_left_parentheses $@3 FORMALS opt_right_parentheses STMT_BLOCK

    opt_left_parentheses  shift, and go to state 57


State 46

   18 TYPE: TYPE opt_left_bracket opt_right_bracket .

    $default  reduce using rule 18 (TYPE)


State 47

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses . $@5 FORMALS opt_right_parentheses STMT_BLOCK

    $default  reduce using rule 24 ($@5)

    $@5  go to state 58


State 48

   29 EXTENDS: vip_extends identifier .

    $default  reduce using rule 29 (EXTENDS)


State 49

   32 IMPLEMENTS: vip_implements . IDENTIFIER_PLUS

    error       shift, and go to state 1
    identifier  shift, and go to state 59

    IDENTIFIER_PLUS  go to state 60
    ERR              go to state 61


State 50

   28 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS . opt_left_brace FIELD_ASTERISK opt_right_brace

    opt_left_brace  shift, and go to state 62


State 51

   34 IMPLEMENTS: ERR .

    $default  reduce using rule 34 (IMPLEMENTS)


State 52

   47 PROTOTYPE: vip_void . identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    identifier  shift, and go to state 63


State 53

   18 TYPE: TYPE . opt_left_bracket opt_right_bracket
   46 PROTOTYPE: TYPE . identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    identifier        shift, and go to state 64
    opt_left_bracket  shift, and go to state 37


State 54

   42 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK . opt_right_brace

    opt_right_brace  shift, and go to state 65


State 55

   43 PROTOTYPE_ASTERISK: PROTOTYPE . PROTOTYPE_ASTERISK

    error       shift, and go to state 1
    vip_void    shift, and go to state 52
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    identifier  shift, and go to state 10

    opt_right_brace  reduce using rule 44 (PROTOTYPE_ASTERISK)

    TYPE                go to state 53
    PROTOTYPE_ASTERISK  go to state 66
    PROTOTYPE           go to state 55
    ERR                 go to state 56


State 56

   45 PROTOTYPE_ASTERISK: ERR .

    $default  reduce using rule 45 (PROTOTYPE_ASTERISK)


State 57

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses . $@3 FORMALS opt_right_parentheses STMT_BLOCK

    $default  reduce using rule 21 ($@3)

    $@3  go to state 67


State 58

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses $@5 . FORMALS opt_right_parentheses STMT_BLOCK

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    $default  reduce using rule 27 (FORMALS)

    VARIABLE       go to state 68
    VARIABLE_PLUS  go to state 69
    TYPE           go to state 28
    FORMALS        go to state 70


State 59

   35 IDENTIFIER_PLUS: identifier . opt_coma IDENTIFIER_PLUS
   36                | identifier .

    opt_coma  shift, and go to state 71

    $default  reduce using rule 36 (IDENTIFIER_PLUS)


State 60

   32 IMPLEMENTS: vip_implements IDENTIFIER_PLUS .

    $default  reduce using rule 32 (IMPLEMENTS)


State 61

   37 IDENTIFIER_PLUS: ERR .

    $default  reduce using rule 37 (IDENTIFIER_PLUS)


State 62

   28 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace . FIELD_ASTERISK opt_right_brace

    error       shift, and go to state 1
    vip_void    shift, and go to state 2
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    opt_right_brace  reduce using rule 39 (FIELD_ASTERISK)

    VAR_DECL        go to state 72
    VARIABLE        go to state 14
    TYPE            go to state 15
    FUNCTION_DECL   go to state 73
    FIELD_ASTERISK  go to state 74
    FIELD           go to state 75
    ERR             go to state 19


State 63

   47 PROTOTYPE: vip_void identifier . opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 76


State 64

   46 PROTOTYPE: TYPE identifier . opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 77


State 65

   42 INTERFACE_DECL: vip_interface identifier opt_left_brace PROTOTYPE_ASTERISK opt_right_brace .

    $default  reduce using rule 42 (INTERFACE_DECL)


State 66

   43 PROTOTYPE_ASTERISK: PROTOTYPE PROTOTYPE_ASTERISK .

    $default  reduce using rule 43 (PROTOTYPE_ASTERISK)


State 67

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses $@3 . FORMALS opt_right_parentheses STMT_BLOCK

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    $default  reduce using rule 27 (FORMALS)

    VARIABLE       go to state 68
    VARIABLE_PLUS  go to state 69
    TYPE           go to state 28
    FORMALS        go to state 78


State 68

   12 VARIABLE_PLUS: VARIABLE . opt_coma $@1 VARIABLE_PLUS
   13              | VARIABLE .

    opt_coma  shift, and go to state 79

    $default  reduce using rule 13 (VARIABLE_PLUS)


State 69

   26 FORMALS: VARIABLE_PLUS .

    $default  reduce using rule 26 (FORMALS)


State 70

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses $@5 FORMALS . opt_right_parentheses STMT_BLOCK

    opt_right_parentheses  shift, and go to state 80


State 71

   35 IDENTIFIER_PLUS: identifier opt_coma . IDENTIFIER_PLUS

    error       shift, and go to state 1
    identifier  shift, and go to state 59

    IDENTIFIER_PLUS  go to state 81
    ERR              go to state 61


State 72

   40 FIELD: VAR_DECL .

    $default  reduce using rule 40 (FIELD)


State 73

   41 FIELD: FUNCTION_DECL .

    $default  reduce using rule 41 (FIELD)


State 74

   28 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK . opt_right_brace

    opt_right_brace  shift, and go to state 82


State 75

   38 FIELD_ASTERISK: FIELD . FIELD_ASTERISK

    error       shift, and go to state 1
    vip_void    shift, and go to state 2
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    opt_right_brace  reduce using rule 39 (FIELD_ASTERISK)

    VAR_DECL        go to state 72
    VARIABLE        go to state 14
    TYPE            go to state 15
    FUNCTION_DECL   go to state 73
    FIELD_ASTERISK  go to state 83
    FIELD           go to state 75
    ERR             go to state 19


State 76

   47 PROTOTYPE: vip_void identifier opt_left_parentheses . FORMALS opt_right_parentheses opt_semicolon

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    $default  reduce using rule 27 (FORMALS)

    VARIABLE       go to state 68
    VARIABLE_PLUS  go to state 69
    TYPE           go to state 28
    FORMALS        go to state 84


State 77

   46 PROTOTYPE: TYPE identifier opt_left_parentheses . FORMALS opt_right_parentheses opt_semicolon

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    $default  reduce using rule 27 (FORMALS)

    VARIABLE       go to state 68
    VARIABLE_PLUS  go to state 69
    TYPE           go to state 28
    FORMALS        go to state 85


State 78

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses $@3 FORMALS . opt_right_parentheses STMT_BLOCK

    opt_right_parentheses  shift, and go to state 86


State 79

   12 VARIABLE_PLUS: VARIABLE opt_coma . $@1 VARIABLE_PLUS

    $default  reduce using rule 11 ($@1)

    $@1  go to state 87


State 80

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses $@5 FORMALS opt_right_parentheses . STMT_BLOCK

    opt_left_brace  shift, and go to state 88

    STMT_BLOCK  go to state 89


State 81

   35 IDENTIFIER_PLUS: identifier opt_coma IDENTIFIER_PLUS .

    $default  reduce using rule 35 (IDENTIFIER_PLUS)


State 82

   28 CLASS_DECL: vip_class identifier EXTENDS IMPLEMENTS opt_left_brace FIELD_ASTERISK opt_right_brace .

    $default  reduce using rule 28 (CLASS_DECL)


State 83

   38 FIELD_ASTERISK: FIELD FIELD_ASTERISK .

    $default  reduce using rule 38 (FIELD_ASTERISK)


State 84

   47 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 90


State 85

   46 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 91


State 86

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses $@3 FORMALS opt_right_parentheses . STMT_BLOCK

    opt_left_brace  shift, and go to state 88

    STMT_BLOCK  go to state 92


State 87

   12 VARIABLE_PLUS: VARIABLE opt_coma $@1 . VARIABLE_PLUS

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    VARIABLE       go to state 68
    VARIABLE_PLUS  go to state 93
    TYPE           go to state 28


State 88

   48 STMT_BLOCK: opt_left_brace . VARS STMTS opt_right_brace

    error       shift, and go to state 1
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    error                 [reduce using rule 50 (VARS)]
    vip_null              reduce using rule 50 (VARS)
    vip_this              reduce using rule 50 (VARS)
    vip_for               reduce using rule 50 (VARS)
    vip_while             reduce using rule 50 (VARS)
    vip_if                reduce using rule 50 (VARS)
    vip_return            reduce using rule 50 (VARS)
    vip_break             reduce using rule 50 (VARS)
    vip_New               reduce using rule 50 (VARS)
    vip_NewArray          reduce using rule 50 (VARS)
    vip_Print             reduce using rule 50 (VARS)
    vip_ReadInteger       reduce using rule 50 (VARS)
    vip_ReadLine          reduce using rule 50 (VARS)
    vip_Malloc            reduce using rule 50 (VARS)
    identifier            [reduce using rule 50 (VARS)]
    num_int               reduce using rule 50 (VARS)
    num_hex               reduce using rule 50 (VARS)
    num_double            reduce using rule 50 (VARS)
    val_string            reduce using rule 50 (VARS)
    val_bool              reduce using rule 50 (VARS)
    opt_minus             reduce using rule 50 (VARS)
    opt_not               reduce using rule 50 (VARS)
    opt_semicolon         reduce using rule 50 (VARS)
    opt_left_brace        reduce using rule 50 (VARS)
    opt_right_brace       reduce using rule 50 (VARS)
    opt_left_parentheses  reduce using rule 50 (VARS)

    VAR_DECL  go to state 94
    VARIABLE  go to state 14
    TYPE      go to state 28
    VARS      go to state 95
    ERR       go to state 19


State 89

   25 FUNCTION_DECL: vip_void identifier $@4 opt_left_parentheses $@5 FORMALS opt_right_parentheses STMT_BLOCK .

    $default  reduce using rule 25 (FUNCTION_DECL)


State 90

   47 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 96


State 91

   46 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 97


State 92

   22 FUNCTION_DECL: TYPE identifier $@2 opt_left_parentheses $@3 FORMALS opt_right_parentheses STMT_BLOCK .

    $default  reduce using rule 22 (FUNCTION_DECL)


State 93

   12 VARIABLE_PLUS: VARIABLE opt_coma $@1 VARIABLE_PLUS .

    $default  reduce using rule 12 (VARIABLE_PLUS)


State 94

   49 VARS: VAR_DECL . VARS

    error       shift, and go to state 1
    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    vip_const   shift, and go to state 9
    identifier  shift, and go to state 10

    error                 [reduce using rule 50 (VARS)]
    vip_null              reduce using rule 50 (VARS)
    vip_this              reduce using rule 50 (VARS)
    vip_for               reduce using rule 50 (VARS)
    vip_while             reduce using rule 50 (VARS)
    vip_if                reduce using rule 50 (VARS)
    vip_return            reduce using rule 50 (VARS)
    vip_break             reduce using rule 50 (VARS)
    vip_New               reduce using rule 50 (VARS)
    vip_NewArray          reduce using rule 50 (VARS)
    vip_Print             reduce using rule 50 (VARS)
    vip_ReadInteger       reduce using rule 50 (VARS)
    vip_ReadLine          reduce using rule 50 (VARS)
    vip_Malloc            reduce using rule 50 (VARS)
    identifier            [reduce using rule 50 (VARS)]
    num_int               reduce using rule 50 (VARS)
    num_hex               reduce using rule 50 (VARS)
    num_double            reduce using rule 50 (VARS)
    val_string            reduce using rule 50 (VARS)
    val_bool              reduce using rule 50 (VARS)
    opt_minus             reduce using rule 50 (VARS)
    opt_not               reduce using rule 50 (VARS)
    opt_semicolon         reduce using rule 50 (VARS)
    opt_left_brace        reduce using rule 50 (VARS)
    opt_right_brace       reduce using rule 50 (VARS)
    opt_left_parentheses  reduce using rule 50 (VARS)

    VAR_DECL  go to state 94
    VARIABLE  go to state 14
    TYPE      go to state 28
    VARS      go to state 98
    ERR       go to state 19


State 95

   48 STMT_BLOCK: opt_left_brace VARS . STMTS opt_right_brace

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon    reduce using rule 71 (EXPRESSION_Q)
    opt_right_brace  reduce using rule 52 (STMTS)

    STMT_BLOCK    go to state 121
    STMTS         go to state 122
    STATEMENT     go to state 123
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 96

   47 PROTOTYPE: vip_void identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 47 (PROTOTYPE)


State 97

   46 PROTOTYPE: TYPE identifier opt_left_parentheses FORMALS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 46 (PROTOTYPE)


State 98

   49 VARS: VAR_DECL VARS .

    $default  reduce using rule 49 (VARS)


State 99

  116 CONST: vip_null .

    $default  reduce using rule 116 (CONST)


State 100

   77 EXPRESSION: vip_this .

    $default  reduce using rule 77 (EXPRESSION)


State 101

   66 FOR_STMT: vip_for . opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    opt_left_parentheses  shift, and go to state 136


State 102

   65 WHILE_STMT: vip_while . opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT

    opt_left_parentheses  shift, and go to state 137


State 103

   62 IF_STMT: vip_if . opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

    opt_left_parentheses  shift, and go to state 138


State 104

   67 RETURN_STMT: vip_return . EXPRESSION_Q opt_semicolon

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 71 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 139
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134


State 105

   68 BREAK_STMT: vip_break . opt_semicolon

    opt_semicolon  shift, and go to state 140


State 106

   95 EXPRESSION: vip_New . opt_left_parentheses identifier opt_right_parentheses

    opt_left_parentheses  shift, and go to state 141


State 107

   96 EXPRESSION: vip_NewArray . opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses

    opt_left_parentheses  shift, and go to state 142


State 108

   69 PRINT_STMT: vip_Print . opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon

    opt_left_parentheses  shift, and go to state 143


State 109

   97 EXPRESSION: vip_ReadInteger . opt_left_parentheses opt_right_parentheses

    opt_left_parentheses  shift, and go to state 144


State 110

   98 EXPRESSION: vip_ReadLine . opt_left_parentheses opt_right_parentheses

    opt_left_parentheses  shift, and go to state 145


State 111

   99 EXPRESSION: vip_Malloc . opt_left_parentheses EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 146


State 112

  100 VALUE: identifier .
  104 CALL: identifier . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 147

    $default  reduce using rule 100 (VALUE)


State 113

  111 CONST: num_int .

    $default  reduce using rule 111 (CONST)


State 114

  112 CONST: num_hex .

    $default  reduce using rule 112 (CONST)


State 115

  113 CONST: num_double .

    $default  reduce using rule 113 (CONST)


State 116

  115 CONST: val_string .

    $default  reduce using rule 115 (CONST)


State 117

  114 CONST: val_bool .

    $default  reduce using rule 114 (CONST)


State 118

   85 EXPRESSION: opt_minus . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 148
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 119

   94 EXPRESSION: opt_not . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 149
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 120

   79 EXPRESSION: opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 150
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 121

   60 STATEMENT: STMT_BLOCK .

    $default  reduce using rule 60 (STATEMENT)


State 122

   48 STMT_BLOCK: opt_left_brace VARS STMTS . opt_right_brace

    opt_right_brace  shift, and go to state 151


State 123

   51 STMTS: STATEMENT . STMTS

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon    reduce using rule 71 (EXPRESSION_Q)
    opt_right_brace  reduce using rule 52 (STMTS)

    STMT_BLOCK    go to state 121
    STMTS         go to state 152
    STATEMENT     go to state 123
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 124

   54 STATEMENT: IF_STMT .

    $default  reduce using rule 54 (STATEMENT)


State 125

   55 STATEMENT: WHILE_STMT .

    $default  reduce using rule 55 (STATEMENT)


State 126

   56 STATEMENT: FOR_STMT .

    $default  reduce using rule 56 (STATEMENT)


State 127

   58 STATEMENT: RETURN_STMT .

    $default  reduce using rule 58 (STATEMENT)


State 128

   57 STATEMENT: BREAK_STMT .

    $default  reduce using rule 57 (STATEMENT)


State 129

   59 STATEMENT: PRINT_STMT .

    $default  reduce using rule 59 (STATEMENT)


State 130

   53 STATEMENT: EXPRESSION_Q . opt_semicolon

    opt_semicolon  shift, and go to state 153


State 131

   70 EXPRESSION_Q: EXPRESSION .
   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    $default  reduce using rule 70 (EXPRESSION_Q)

    VALUE_P  go to state 169


State 132

   74 EXPRESSION: VALUE . opt_assign EXPRESSION
   76           | VALUE .

    opt_assign  shift, and go to state 170

    $default  reduce using rule 76 (EXPRESSION)


State 133

   78 EXPRESSION: CALL .

    $default  reduce using rule 78 (EXPRESSION)


State 134

   75 EXPRESSION: CONST .

    $default  reduce using rule 75 (EXPRESSION)


State 135

   61 STATEMENT: ERR .

    $default  reduce using rule 61 (STATEMENT)


State 136

   66 FOR_STMT: vip_for opt_left_parentheses . EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 71 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 171
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134


State 137

   65 WHILE_STMT: vip_while opt_left_parentheses . EXPRESSION opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 172
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 138

   62 IF_STMT: vip_if opt_left_parentheses . EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 173
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 139

   67 RETURN_STMT: vip_return EXPRESSION_Q . opt_semicolon

    opt_semicolon  shift, and go to state 174


State 140

   68 BREAK_STMT: vip_break opt_semicolon .

    $default  reduce using rule 68 (BREAK_STMT)


State 141

   95 EXPRESSION: vip_New opt_left_parentheses . identifier opt_right_parentheses

    identifier  shift, and go to state 175


State 142

   96 EXPRESSION: vip_NewArray opt_left_parentheses . EXPRESSION opt_coma TYPE opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 176
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 143

   69 PRINT_STMT: vip_Print opt_left_parentheses . EXPRESSION_PLUS opt_right_parentheses opt_semicolon

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION_PLUS  go to state 177
    EXPRESSION       go to state 178
    VALUE            go to state 132
    CALL             go to state 133
    CONST            go to state 134


State 144

   97 EXPRESSION: vip_ReadInteger opt_left_parentheses . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 179


State 145

   98 EXPRESSION: vip_ReadLine opt_left_parentheses . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 180


State 146

   99 EXPRESSION: vip_Malloc opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 181
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 147

  104 CALL: identifier opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 110 (ACTUAL)

    EXPRESSION_PLUS  go to state 182
    EXPRESSION       go to state 178
    VALUE            go to state 132
    CALL             go to state 133
    ACTUAL           go to state 183
    CONST            go to state 134


State 148

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   85           | opt_minus EXPRESSION .
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 85 (EXPRESSION)

    VALUE_P  go to state 169


State 149

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
   94           | opt_not EXPRESSION .
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 94 (EXPRESSION)

    VALUE_P  go to state 169


State 150

   79 EXPRESSION: opt_left_parentheses EXPRESSION . opt_right_parentheses
   80           | EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 184

    VALUE_P  go to state 169


State 151

   48 STMT_BLOCK: opt_left_brace VARS STMTS opt_right_brace .

    $default  reduce using rule 48 (STMT_BLOCK)


State 152

   51 STMTS: STATEMENT STMTS .

    $default  reduce using rule 51 (STMTS)


State 153

   53 STATEMENT: EXPRESSION_Q opt_semicolon .

    $default  reduce using rule 53 (STATEMENT)


State 154

   80 EXPRESSION: EXPRESSION opt_plus . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 185
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 155

   81 EXPRESSION: EXPRESSION opt_minus . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 186
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 156

   83 EXPRESSION: EXPRESSION opt_times . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 187
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 157

   82 EXPRESSION: EXPRESSION opt_divide . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 188
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 158

   84 EXPRESSION: EXPRESSION opt_mod . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 189
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 159

   86 EXPRESSION: EXPRESSION opt_lower . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 190
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 160

   87 EXPRESSION: EXPRESSION opt_lower_equal . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 191
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 161

   88 EXPRESSION: EXPRESSION opt_greater . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 192
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 162

   89 EXPRESSION: EXPRESSION opt_greater_equal . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 193
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 163

   90 EXPRESSION: EXPRESSION opt_equal . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 194
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 164

   91 EXPRESSION: EXPRESSION opt_not_equal . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 195
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 165

   92 EXPRESSION: EXPRESSION opt_and . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 196
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 166

   93 EXPRESSION: EXPRESSION opt_or . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 197
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 167

  102 VALUE_P: opt_dot . identifier
  105 CALL: EXPRESSION opt_dot . identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION opt_dot . LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    vip_GetByte  shift, and go to state 198
    vip_SetByte  shift, and go to state 199
    identifier   shift, and go to state 200

    LIB_CALL  go to state 201


State 168

  103 VALUE_P: opt_left_bracket . EXPRESSION opt_right_bracket

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 202
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 169

  101 VALUE: EXPRESSION VALUE_P .

    $default  reduce using rule 101 (VALUE)


State 170

   74 EXPRESSION: VALUE opt_assign . EXPRESSION

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 203
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 171

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q . opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    opt_semicolon  shift, and go to state 204


State 172

   65 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION . opt_right_parentheses STATEMENT
   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 205

    VALUE_P  go to state 169


State 173

   62 IF_STMT: vip_if opt_left_parentheses EXPRESSION . opt_right_parentheses STATEMENT ELSE_STMT
   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 206

    VALUE_P  go to state 169


State 174

   67 RETURN_STMT: vip_return EXPRESSION_Q opt_semicolon .

    $default  reduce using rule 67 (RETURN_STMT)


State 175

   95 EXPRESSION: vip_New opt_left_parentheses identifier . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 207


State 176

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
   96           | vip_NewArray opt_left_parentheses EXPRESSION . opt_coma TYPE opt_right_parentheses
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_coma           shift, and go to state 208
    opt_left_bracket   shift, and go to state 168

    VALUE_P  go to state 169


State 177

   69 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS . opt_right_parentheses opt_semicolon

    opt_right_parentheses  shift, and go to state 209


State 178

   72 EXPRESSION_PLUS: EXPRESSION . opt_coma EXPRESSION_PLUS
   73                | EXPRESSION .
   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_coma           shift, and go to state 210
    opt_left_bracket   shift, and go to state 168

    $default  reduce using rule 73 (EXPRESSION_PLUS)

    VALUE_P  go to state 169


State 179

   97 EXPRESSION: vip_ReadInteger opt_left_parentheses opt_right_parentheses .

    $default  reduce using rule 97 (EXPRESSION)


State 180

   98 EXPRESSION: vip_ReadLine opt_left_parentheses opt_right_parentheses .

    $default  reduce using rule 98 (EXPRESSION)


State 181

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
   99           | vip_Malloc opt_left_parentheses EXPRESSION . opt_right_parentheses
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 211

    VALUE_P  go to state 169


State 182

  109 ACTUAL: EXPRESSION_PLUS .

    $default  reduce using rule 109 (ACTUAL)


State 183

  104 CALL: identifier opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 212


State 184

   79 EXPRESSION: opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 79 (EXPRESSION)


State 185

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   80           | EXPRESSION opt_plus EXPRESSION .
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 80 (EXPRESSION)

    VALUE_P  go to state 169


State 186

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   81           | EXPRESSION opt_minus EXPRESSION .
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 81 (EXPRESSION)

    VALUE_P  go to state 169


State 187

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   83           | EXPRESSION opt_times EXPRESSION .
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 83 (EXPRESSION)

    VALUE_P  go to state 169


State 188

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   82           | EXPRESSION opt_divide EXPRESSION .
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 82 (EXPRESSION)

    VALUE_P  go to state 169


State 189

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   84           | EXPRESSION opt_mod EXPRESSION .
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 84 (EXPRESSION)

    VALUE_P  go to state 169


State 190

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   86           | EXPRESSION opt_lower EXPRESSION .
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 154
    opt_minus         shift, and go to state 155
    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 86 (EXPRESSION)

    VALUE_P  go to state 169


State 191

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   87           | EXPRESSION opt_lower_equal EXPRESSION .
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 154
    opt_minus         shift, and go to state 155
    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 87 (EXPRESSION)

    VALUE_P  go to state 169


State 192

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   88           | EXPRESSION opt_greater EXPRESSION .
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 154
    opt_minus         shift, and go to state 155
    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 88 (EXPRESSION)

    VALUE_P  go to state 169


State 193

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   89           | EXPRESSION opt_greater_equal EXPRESSION .
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus          shift, and go to state 154
    opt_minus         shift, and go to state 155
    opt_times         shift, and go to state 156
    opt_divide        shift, and go to state 157
    opt_mod           shift, and go to state 158
    opt_dot           shift, and go to state 167
    opt_left_bracket  shift, and go to state 168

    $default  reduce using rule 89 (EXPRESSION)

    VALUE_P  go to state 169


State 194

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   90           | EXPRESSION opt_equal EXPRESSION .
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    opt_equal      error (nonassociative)
    opt_not_equal  error (nonassociative)

    $default  reduce using rule 90 (EXPRESSION)

    VALUE_P  go to state 169


State 195

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   91           | EXPRESSION opt_not_equal EXPRESSION .
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    opt_equal      error (nonassociative)
    opt_not_equal  error (nonassociative)

    $default  reduce using rule 91 (EXPRESSION)

    VALUE_P  go to state 169


State 196

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   92           | EXPRESSION opt_and EXPRESSION .
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    $default  reduce using rule 92 (EXPRESSION)

    VALUE_P  go to state 169


State 197

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
   93           | EXPRESSION opt_or EXPRESSION .
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    $default  reduce using rule 93 (EXPRESSION)

    VALUE_P  go to state 169


State 198

  107 LIB_CALL: vip_GetByte . opt_left_parentheses EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 213


State 199

  108 LIB_CALL: vip_SetByte . opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses

    opt_left_parentheses  shift, and go to state 214


State 200

  102 VALUE_P: opt_dot identifier .
  105 CALL: EXPRESSION opt_dot identifier . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 215

    $default  reduce using rule 102 (VALUE_P)


State 201

  106 CALL: EXPRESSION opt_dot LIB_CALL . opt_left_parentheses ACTUAL opt_right_parentheses

    opt_left_parentheses  shift, and go to state 216


State 202

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  103 VALUE_P: opt_left_bracket EXPRESSION . opt_right_bracket
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168
    opt_right_bracket  shift, and go to state 217

    VALUE_P  go to state 169


State 203

   74 EXPRESSION: VALUE opt_assign EXPRESSION .
   80           | EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    $default  reduce using rule 74 (EXPRESSION)

    VALUE_P  go to state 169


State 204

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon . EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 218
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 205

   65 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon  reduce using rule 71 (EXPRESSION_Q)

    STMT_BLOCK    go to state 121
    STATEMENT     go to state 219
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 206

   62 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses . STATEMENT ELSE_STMT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon  reduce using rule 71 (EXPRESSION_Q)

    STMT_BLOCK    go to state 121
    STATEMENT     go to state 220
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 207

   95 EXPRESSION: vip_New opt_left_parentheses identifier opt_right_parentheses .

    $default  reduce using rule 95 (EXPRESSION)


State 208

   96 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma . TYPE opt_right_parentheses

    vip_int     shift, and go to state 3
    vip_double  shift, and go to state 4
    vip_bool    shift, and go to state 5
    vip_string  shift, and go to state 6
    identifier  shift, and go to state 10

    TYPE  go to state 221


State 209

   69 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses . opt_semicolon

    opt_semicolon  shift, and go to state 222


State 210

   72 EXPRESSION_PLUS: EXPRESSION opt_coma . EXPRESSION_PLUS

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION_PLUS  go to state 223
    EXPRESSION       go to state 178
    VALUE            go to state 132
    CALL             go to state 133
    CONST            go to state 134


State 211

   99 EXPRESSION: vip_Malloc opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 99 (EXPRESSION)


State 212

  104 CALL: identifier opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 104 (CALL)


State 213

  107 LIB_CALL: vip_GetByte opt_left_parentheses . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 224
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 214

  108 LIB_CALL: vip_SetByte opt_left_parentheses . EXPRESSION opt_coma EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 225
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 215

  105 CALL: EXPRESSION opt_dot identifier opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 110 (ACTUAL)

    EXPRESSION_PLUS  go to state 182
    EXPRESSION       go to state 178
    VALUE            go to state 132
    CALL             go to state 133
    ACTUAL           go to state 226
    CONST            go to state 134


State 216

  106 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses . ACTUAL opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 110 (ACTUAL)

    EXPRESSION_PLUS  go to state 182
    EXPRESSION       go to state 178
    VALUE            go to state 132
    CALL             go to state 133
    ACTUAL           go to state 227
    CONST            go to state 134


State 217

  103 VALUE_P: opt_left_bracket EXPRESSION opt_right_bracket .

    $default  reduce using rule 103 (VALUE_P)


State 218

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION . opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT
   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_semicolon      shift, and go to state 228
    opt_dot            shift, and go to state 167
    opt_left_bracket   shift, and go to state 168

    VALUE_P  go to state 169


State 219

   65 WHILE_STMT: vip_while opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT .

    $default  reduce using rule 65 (WHILE_STMT)


State 220

   62 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT . ELSE_STMT

    vip_else  shift, and go to state 229

    vip_else  [reduce using rule 64 (ELSE_STMT)]
    $default  reduce using rule 64 (ELSE_STMT)

    ELSE_STMT  go to state 230


State 221

   18 TYPE: TYPE . opt_left_bracket opt_right_bracket
   96 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE . opt_right_parentheses

    opt_left_bracket       shift, and go to state 37
    opt_right_parentheses  shift, and go to state 231


State 222

   69 PRINT_STMT: vip_Print opt_left_parentheses EXPRESSION_PLUS opt_right_parentheses opt_semicolon .

    $default  reduce using rule 69 (PRINT_STMT)


State 223

   72 EXPRESSION_PLUS: EXPRESSION opt_coma EXPRESSION_PLUS .

    $default  reduce using rule 72 (EXPRESSION_PLUS)


State 224

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  107 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION . opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 232

    VALUE_P  go to state 169


State 225

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  108 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION . opt_coma EXPRESSION opt_right_parentheses

    opt_plus           shift, and go to state 154
    opt_minus          shift, and go to state 155
    opt_times          shift, and go to state 156
    opt_divide         shift, and go to state 157
    opt_mod            shift, and go to state 158
    opt_lower          shift, and go to state 159
    opt_lower_equal    shift, and go to state 160
    opt_greater        shift, and go to state 161
    opt_greater_equal  shift, and go to state 162
    opt_equal          shift, and go to state 163
    opt_not_equal      shift, and go to state 164
    opt_and            shift, and go to state 165
    opt_or             shift, and go to state 166
    opt_dot            shift, and go to state 167
    opt_coma           shift, and go to state 233
    opt_left_bracket   shift, and go to state 168

    VALUE_P  go to state 169


State 226

  105 CALL: EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 234


State 227

  106 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL . opt_right_parentheses

    opt_right_parentheses  shift, and go to state 235


State 228

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon . EXPRESSION_Q opt_right_parentheses STATEMENT

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    $default  reduce using rule 71 (EXPRESSION_Q)

    EXPRESSION_Q  go to state 236
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134


State 229

   63 ELSE_STMT: vip_else . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon  reduce using rule 71 (EXPRESSION_Q)

    STMT_BLOCK    go to state 121
    STATEMENT     go to state 237
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 230

   62 IF_STMT: vip_if opt_left_parentheses EXPRESSION opt_right_parentheses STATEMENT ELSE_STMT .

    $default  reduce using rule 62 (IF_STMT)


State 231

   96 EXPRESSION: vip_NewArray opt_left_parentheses EXPRESSION opt_coma TYPE opt_right_parentheses .

    $default  reduce using rule 96 (EXPRESSION)


State 232

  107 LIB_CALL: vip_GetByte opt_left_parentheses EXPRESSION opt_right_parentheses .

    $default  reduce using rule 107 (LIB_CALL)


State 233

  108 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma . EXPRESSION opt_right_parentheses

    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_parentheses  shift, and go to state 120

    EXPRESSION  go to state 238
    VALUE       go to state 132
    CALL        go to state 133
    CONST       go to state 134


State 234

  105 CALL: EXPRESSION opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 105 (CALL)


State 235

  106 CALL: EXPRESSION opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses .

    $default  reduce using rule 106 (CALL)


State 236

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q . opt_right_parentheses STATEMENT

    opt_right_parentheses  shift, and go to state 239


State 237

   63 ELSE_STMT: vip_else STATEMENT .

    $default  reduce using rule 63 (ELSE_STMT)


State 238

   80 EXPRESSION: EXPRESSION . opt_plus EXPRESSION
   81           | EXPRESSION . opt_minus EXPRESSION
   82           | EXPRESSION . opt_divide EXPRESSION
   83           | EXPRESSION . opt_times EXPRESSION
   84           | EXPRESSION . opt_mod EXPRESSION
   86           | EXPRESSION . opt_lower EXPRESSION
   87           | EXPRESSION . opt_lower_equal EXPRESSION
   88           | EXPRESSION . opt_greater EXPRESSION
   89           | EXPRESSION . opt_greater_equal EXPRESSION
   90           | EXPRESSION . opt_equal EXPRESSION
   91           | EXPRESSION . opt_not_equal EXPRESSION
   92           | EXPRESSION . opt_and EXPRESSION
   93           | EXPRESSION . opt_or EXPRESSION
  101 VALUE: EXPRESSION . VALUE_P
  105 CALL: EXPRESSION . opt_dot identifier opt_left_parentheses ACTUAL opt_right_parentheses
  106     | EXPRESSION . opt_dot LIB_CALL opt_left_parentheses ACTUAL opt_right_parentheses
  108 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION . opt_right_parentheses

    opt_plus               shift, and go to state 154
    opt_minus              shift, and go to state 155
    opt_times              shift, and go to state 156
    opt_divide             shift, and go to state 157
    opt_mod                shift, and go to state 158
    opt_lower              shift, and go to state 159
    opt_lower_equal        shift, and go to state 160
    opt_greater            shift, and go to state 161
    opt_greater_equal      shift, and go to state 162
    opt_equal              shift, and go to state 163
    opt_not_equal          shift, and go to state 164
    opt_and                shift, and go to state 165
    opt_or                 shift, and go to state 166
    opt_dot                shift, and go to state 167
    opt_left_bracket       shift, and go to state 168
    opt_right_parentheses  shift, and go to state 240

    VALUE_P  go to state 169


State 239

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses . STATEMENT

    error                 shift, and go to state 1
    vip_null              shift, and go to state 99
    vip_this              shift, and go to state 100
    vip_for               shift, and go to state 101
    vip_while             shift, and go to state 102
    vip_if                shift, and go to state 103
    vip_return            shift, and go to state 104
    vip_break             shift, and go to state 105
    vip_New               shift, and go to state 106
    vip_NewArray          shift, and go to state 107
    vip_Print             shift, and go to state 108
    vip_ReadInteger       shift, and go to state 109
    vip_ReadLine          shift, and go to state 110
    vip_Malloc            shift, and go to state 111
    identifier            shift, and go to state 112
    num_int               shift, and go to state 113
    num_hex               shift, and go to state 114
    num_double            shift, and go to state 115
    val_string            shift, and go to state 116
    val_bool              shift, and go to state 117
    opt_minus             shift, and go to state 118
    opt_not               shift, and go to state 119
    opt_left_brace        shift, and go to state 88
    opt_left_parentheses  shift, and go to state 120

    opt_semicolon  reduce using rule 71 (EXPRESSION_Q)

    STMT_BLOCK    go to state 121
    STATEMENT     go to state 241
    IF_STMT       go to state 124
    WHILE_STMT    go to state 125
    FOR_STMT      go to state 126
    RETURN_STMT   go to state 127
    BREAK_STMT    go to state 128
    PRINT_STMT    go to state 129
    EXPRESSION_Q  go to state 130
    EXPRESSION    go to state 131
    VALUE         go to state 132
    CALL          go to state 133
    CONST         go to state 134
    ERR           go to state 135


State 240

  108 LIB_CALL: vip_SetByte opt_left_parentheses EXPRESSION opt_coma EXPRESSION opt_right_parentheses .

    $default  reduce using rule 108 (LIB_CALL)


State 241

   66 FOR_STMT: vip_for opt_left_parentheses EXPRESSION_Q opt_semicolon EXPRESSION opt_semicolon EXPRESSION_Q opt_right_parentheses STATEMENT .

    $default  reduce using rule 66 (FOR_STMT)
